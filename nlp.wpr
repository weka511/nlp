#!wing
#!version=7.0
##################################################################
# Wing project file                                              #
##################################################################
[project attributes]
proj.file-list = [loc('64317-0.txt'),
                  loc('bt.py'),
                  loc('chapter1.txt'),
                  loc('plot.py'),
                  loc('README.md'),
                  loc('rnn2.py'),
                  loc('rnn3.py'),
                  loc('rnn.py'),
                  loc('tokenizer.py'),
                  loc('word2vec.py')]
proj.file-type = 'normal'
proj.launch-config = {loc('plot.py'): ('project',
                                       (u'gatsby[0-9].pt --show --chain',
        '')),
                      loc('word2vec.py'): ('project',
        (u'train --corpus chapter1.txt --embedding 5 --max_checkpoints 2 --chk ZZZ',
         ''))}
[user attributes]
debug.recent-run-args = {loc('plot.py'): [u'gatsby[0-9].pt --show --chain',
        u'gatsby2.pt --show --chain',
        u'gatsby*.pt --show --chain',
        u'gatsby*.pt --show',
        u'gatsby[0-9]*.pt --show',
        u'gatsby2.pt gatsby3.pt --show',
        u'gatsby2.pt gatasby3.pt --show',
        u'gatsby2.pt --show',
        u'gatsby1.pt --show',
        u'foo bar baz --show',
        u'foo bar baz'],
                         loc('word2vec.py'): [u'train --corpus chapter1.txt --embedding 5 --max_checkpoints 2 --chk ZZZ',
        u'train --corpus chapter1.txt --embedding 5 --saved foo --max_checkpoints 2 --chk ZZZ',
        u'train --corpus chapter1.txt --embedding 5 --saved foo1 --max_checkpoints 2 --chk ZZZ',
        u'train --corpus chapter1.txt --embedding 5 --output foo --max_checkpoints 2 --chk ZZZ',
        u'train --corpus chapter1.txt --embedding 5 --output foo --max_checkpoints 2 -- chk ZZZ',
        u'train --corpus chapter1.txt --embedding 5 --output foo max_checkpoints 2',
        u'train --corpus chapter1.txt --embedding 5 --output foo',
        u'resume --saved newseq2 --N 64 --output dummy --alpha 0.0 --lr 0.001',
        u'--saved newseq2 --N 64 --output dummy --alpha 0.0 --lr 0.001',
        u'test --output gatsby',
        u'test --saved gatsby5.pt',
        u'resume --saved gatsby2 --N 2',
        u'resume --saved gatsby2 --num_epochs 2',
        u'train --output test --N 25 --nano --frequency 1',
        u'train --output test --N 25 --nano',
        u'train --output test --N 5 --nano',
        u'train --output test --N 5',
        u'test --output test --N 5',
        u'test',
        u'train --frequency 1 --burn 0 --N 10 --m 100  --show  --out gatsby',
        u'train --frequency 1 --burn 0 --N 10 -m 100  --show',
        u'train --frequency 1 --burn 0',
        u'train --frequency 1',
        u'train --corpus 64317-0.txt',
        u'train --corpus 64317-0',
        u'--corpus 64317-0',
        u'--help',
        u'test --out shuffled',
        u'train --out temp --show',
        u'train --out temp --show --shuffle']}
edit.file-encoding = {loc('chapter1.txt'): 'utf_8',
                      loc('rnn.py'): 'utf_8'}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'zRuoo7lo1K5bGtfhUhOsW4cZwV'\
        '1Zxhqw',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.25,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [],
                                 'selected-nodes': [(4,)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('../../../Program Files (x86)/Wing Personal 7.2/resources/builtin-pi-files/__os__/win32/3.8/builtins.pi'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../Program Files (x86)/Wing Personal 7.2/resources/builtin-pi-files/__os__/win32/3.8/builtins.pi'),
                      'abs')]},
        loc('../../../Program Files (x86)/Wing Personal 7.2/resources/typeshed/stdlib/3/os/__init__.pyi'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('../../../Program Files (x86)/Wing Personal 7.2/resources/typeshed/stdlib/3/os/__init__.pyi'),
                             '_wrap_close')]],
        'top-node': [('function def',
                      loc('../../../Program Files (x86)/Wing Personal 7.2/resources/typeshed/stdlib/3/os/__init__.pyi'),
                      'abort')]},
        loc('../../../Program Files (x86)/Wing Personal 7.2/resources/typeshed/stdlib/3/random.pyi'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../../Program Files (x86)/Wing Personal 7.2/resources/typeshed/stdlib/3/random.pyi'),
                             '_T')]],
        'top-node': [('function def',
                      loc('../../../Program Files (x86)/Wing Personal 7.2/resources/typeshed/stdlib/3/random.pyi'),
                      'betavariate')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/encodings/cp1252.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('../AppData/Local/Programs/Python/Python38/Lib/encodings/cp1252.py'),
                             'StreamWriter')]],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/encodings/cp1252.py'),
                      'Codec')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/glob.py'): {'expa'\
        'nded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/glob.py'),
                      'escape')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/inspect.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../AppData/Local/Programs/Python/Python38/Lib/inspect.py'),
                             '__author__')]],
        'top-node': [('generic attribute',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/inspect.py'),
                      'ArgInfo')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/ntpath.py'): {'ex'\
        'panded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/ntpath.py'),
                      'abspath')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/random.py'): {'ex'\
        'panded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../Program Files (x86)/Wing Personal 7.2/resources/typeshed/stdlib/3/random.pyi'),
                      'betavariate')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/PIL/Image.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/PIL/Image.py'),
                      'ADAPTIVE')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/PIL/ImageFile.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/PIL/ImageFile.py'),
                      'ERRORS')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/hpacellseg/cellsegmentator.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/hpacellseg/cellsegmentator.py'),
                      'CellSegmentator')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/hpacellseg/utils.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/hpacellseg/utils.py'),
                      'download_with_url')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/imageio/core/request.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/imageio/core/request.py'),
                      'EXAMPLE_IMAGES')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/__init__.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/afm.py'),
                      '')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/artist.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/artist.py'),
                      'allow_rasterization')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/axes/_axes.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/axes/_axes.py'),
                      'Axes')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/axes/_base.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/axes/_base.py'),
                      '_AxesBase')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/backend_bases.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/backend_bases.py'),
                      'button_press_handler')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/colorbar.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/colorbar.py'),
                             '_set_ticks_on_axis_warn')]],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/colorbar.py'),
                      'Colorbar')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/colors.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/colors.py'),
                      'BoundaryNorm')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/figure.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/figure.py'),
                      'AxesStack')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/gridspec.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/gridspec.py'),
                      'GridSpec')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/image.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/image.py'),
                             '_rgb_to_rgba')]],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/image.py'),
                      'AxesImage')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/patches.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/patches.py'),
                      'Arc')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/pyplot.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/pyplot.py'),
                      'acorr')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/transforms.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/transforms.py'),
                      'Affine2D')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/numpy/core/_methods.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/numpy/core/_methods.py'),
                             '_var')]],
        'top-node': [('generic attribute',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/numpy/core/_methods.py'),
                      'umr_all')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/numpy/core/fromnumeric.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/numpy/core/fromnumeric.py'),
                      'alen')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/numpy/lib/npyio.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/numpy/lib/npyio.py'),
                      'array_function_dispatch')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/pandas/core/internals/construction.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/pandas/core/internals/construction.py'),
                      'arrays_to_mgr')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/scipy/ndimage/interpolation.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/scipy/ndimage/interpolation.py'),
                      'affine_transform')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/scipy/spatial/_plotutils.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/scipy/spatial/_plotutils.py'),
                             '__all__')]],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/scipy/spatial/_plotutils.py'),
                      'convex_hull_plot_2d')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/spacy/util.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/spacy/util.py'),
                      'add_lookups')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/nn/functional.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/nn/functional.py'),
                      'adaptive_avg_pool1d')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/nn/modules/conv.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/nn/modules/conv.py'),
                             '_ConvTransposeNd')]],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/nn/modules/conv.py'),
                      'Conv1d')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/serialization.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/serialization.py'),
                      'check_module_version_greater_or_equal')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/traceback.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../AppData/Local/Programs/Python/Python38/Lib/traceback.py'),
                             '__all__')]],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/traceback.py'),
                      'clear_frames')]},
        loc('../AppData/Local/Wing Personal 7/pi-cache/3.8/C/Users/Weka/AppData/Local/Programs/Python/Python38/Lib/site-packages/numpy/core/_multiarray_umath.pi'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Wing Personal 7/pi-cache/3.8/C/Users/Weka/AppData/Local/Programs/Python/Python38/Lib/site-packages/numpy/core/_multiarray_umath.pi'),
                      'absolute')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/PIL/ImageFile.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Roaming/Python/Python38/site-packages/PIL/ImageFile.py'),
                      'ERRORS')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/image.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/image.py'),
                      'AxesImage')]},
        loc('../ait/ExploreExploit.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../ait/ExploreExploit.py'),
                             'D')]],
        'top-node': [('generic attribute',
                      loc('../ait/ExploreExploit.py'),
                      'A')]},
        loc('../hon/generate.py'): {'expanded-nodes': [],
                                    'selected-nodes': [],
                                    'top-node': None},
        loc('../hon/spike1.py'): {'expanded-nodes': [],
                                  'selected-nodes': [],
                                  'top-node': [('generic attribute',
        loc('../hon/spike1.py'),
        'file')]},
        loc('../hon/visualize.py'): {'expanded-nodes': [],
                                     'selected-nodes': [],
                                     'top-node': [('generic attribute',
        loc('../hon/visualize.py'),
        'axes')]},
        loc('../hpa-scc/CellSegmentatorTest.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../hpa-scc/CellSegmentatorTest.py'),
                      'ax')]},
        loc('../hpa-scc/README.md'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': None},
        loc('../hpa-scc/analyze-labels.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../hpa-scc/analyze-labels.py'),
                             'csvfile')]],
        'top-node': [('generic attribute',
                      loc('../hpa-scc/analyze-labels.py'),
                      'args')]},
        loc('../hpa-scc/census.py'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': [('generic attribute',
        loc('../hpa-scc/census.py'),
        'axs')]},
        loc('../hpa-scc/dirichlet.py'): {'expanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../hpa-scc/dirichlet.py'),
                             'get_dist')]],
        'top-node': [('generic attribute',
                      loc('../hpa-scc/dirichlet.py'),
                      'args')]},
        loc('../hpa-scc/encoder.py'): {'expanded-nodes': [],
                                       'selected-nodes': [None],
                                       'top-node': None},
        loc('../hpa-scc/ex.py'): {'expanded-nodes': [],
                                  'selected-nodes': [],
                                  'top-node': None},
        loc('../hpa-scc/hpascc.py'): {'expanded-nodes': [],
                                      'selected-nodes': [[('function def',
        loc('../hpa-scc/hpascc.py'),
        'read_training_expectations')]],
                                      'top-node': [('generic attribute',
        loc('../hpa-scc/hpascc.py'),
        'BLUE')]},
        loc('../hpa-scc/image_seg.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../hpa-scc/image_seg.py'),
                             'info')]],
        'top-node': [('generic attribute',
                      loc('../hpa-scc/image_seg.py'),
                      'dataset')]},
        loc('../hpa-scc/logs.py'): {'expanded-nodes': [],
                                    'selected-nodes': [[('function def',
        loc('../hpa-scc/logs.py'),
        'expand')]],
                                    'top-node': [('generic attribute',
        loc('../hpa-scc/logs.py'),
        'args')]},
        loc('../hpa-scc/old/README.md'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../hpa-scc/old/train2.py'): {'expanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../hpa-scc/old/train2.py'),
                             'restart')]],
        'top-node': [('generic attribute',
                      loc('../hpa-scc/old/train2.py'),
                      'args')]},
        loc('../hpa-scc/old/visualize.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../hpa-scc/old/vizcnn.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../hpa-scc/old/vizcnn.py'),
                      'args')]},
        loc('../hpa-scc/otsu.py'): {'expanded-nodes': [],
                                    'selected-nodes': [[('function def',
        loc('../hpa-scc/otsu.py'),
        'get_thinned')]],
                                    'top-node': [('generic attribute',
        loc('../hpa-scc/otsu.py'),
        'BLUE')]},
        loc('../hpa-scc/seg.py'): {'expanded-nodes': [],
                                   'selected-nodes': [],
                                   'top-node': [('generic attribute',
        loc('../hpa-scc/seg.py'),
        'cell_mask')]},
        loc('../hpa-scc/segment.py'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': [('function def',
        loc('../hpa-scc/segment.py'),
        'apply_masks')]},
        loc('../hpa-scc/select_images.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../hpa-scc/select_images.py'),
                      'args')]},
        loc('../hpa-scc/slice.py'): {'expanded-nodes': [],
                                     'selected-nodes': [[('function def',
        loc('../hpa-scc/slice.py'),
        'create_image_target')]],
                                     'top-node': [('generic attribute',
        loc('../hpa-scc/slice.py'),
        'args')]},
        loc('../hpa-scc/slice2.py'): {'expanded-nodes': [],
                                      'selected-nodes': [[('function def',
        loc('../hpa-scc/slice2.py'),
        'create_image_target')]],
                                      'top-node': [('generic attribute',
        loc('../hpa-scc/slice2.py'),
        'args')]},
        loc('../hpa-scc/spike5.py'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': [('generic attribute',
        loc('../hpa-scc/spike5.py'),
        'axs')]},
        loc('../hpa-scc/spike6.py'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': [('generic attribute',
        loc('../hpa-scc/spike6.py'),
        'axs')]},
        loc('../hpa-scc/spike7.py'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': [('generic attribute',
        loc('../hpa-scc/spike7.py'),
        'axs')]},
        loc('../hpa-scc/spike8.py'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': [('generic attribute',
        loc('../hpa-scc/spike8.py'),
        'axs')]},
        loc('../hpa-scc/spikes/spike6.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../hpa-scc/spikes/spike6.py'),
                             'nrows')]],
        'top-node': [('generic attribute',
                      loc('../hpa-scc/spikes/spike6.py'),
                      'axs')]},
        loc('../hpa-scc/spikes/spike7.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../hpa-scc/spikes/spike7.py'),
                             'nrows')]],
        'top-node': [('generic attribute',
                      loc('../hpa-scc/spikes/spike7.py'),
                      'axs')]},
        loc('../hpa-scc/spikes/spike8.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../hpa-scc/spikes/spike8.py'),
                             'y0')]],
        'top-node': [('generic attribute',
                      loc('../hpa-scc/spikes/spike8.py'),
                      'axs')]},
        loc('../hpa-scc/spikes/watershed.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../hpa-scc/spikes/watershed.py'),
                      'args')]},
        loc('../hpa-scc/split.py'): {'expanded-nodes': [],
                                     'selected-nodes': [],
                                     'top-node': [('generic attribute',
        loc('../hpa-scc/split.py'),
        'args')]},
        loc('../hpa-scc/submission.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../hpa-scc/train.py'): {'expanded-nodes': [[('class def',
        loc('../hpa-scc/train.py'),
        'CellDataset')],
        [('class def',
          loc('../hpa-scc/train.py'),
          'Net')]],
                                     'selected-nodes': [[('class def',
        loc('../hpa-scc/train.py'),
        'Net')]],
                                     'top-node': [('generic attribute',
        loc('../hpa-scc/train.py'),
        'args')]},
        loc('../hpa-scc/train2.py'): {'expanded-nodes': [],
                                      'selected-nodes': [[('function def',
        loc('../hpa-scc/train2.py'),
        'restart')]],
                                      'top-node': [('generic attribute',
        loc('../hpa-scc/train2.py'),
        'args')]},
        loc('../hpa-scc/utils.py'): {'expanded-nodes': [],
                                     'selected-nodes': [],
                                     'top-node': [('function def',
        loc('../hpa-scc/utils.py'),
        'create_xkcd_colours')]},
        loc('../hpa-scc/visualize.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../hpa-scc/visualize.py'),
                             'Training')]],
        'top-node': [('generic attribute',
                      loc('../hpa-scc/visualize.py'),
                      'args')]},
        loc('../hpa-scc/vizcnn.py'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': [('generic attribute',
        loc('../hpa-scc/vizcnn.py'),
        'args')]},
        loc('../hpa-scc/worklist.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../hpa-scc/worklist.py'),
                      'args')]},
        loc('README.md'): {'expanded-nodes': [],
                           'selected-nodes': [],
                           'top-node': None},
        loc('plot.py'): {'expanded-nodes': [],
                         'selected-nodes': [],
                         'top-node': [('generic attribute',
                                       loc('plot.py'),
                                       'args')]},
        loc('rnn.py'): {'expanded-nodes': [],
                        'selected-nodes': [],
                        'top-node': [('generic attribute',
                                      loc('rnn.py'),
                                      'all_losses')]},
        loc('rnn2.py'): {'expanded-nodes': [],
                         'selected-nodes': [[('class def',
        loc('rnn2.py'),
        'RNN')]],
                         'top-node': [('generic attribute',
                                       loc('rnn2.py'),
                                       'all_losses')]},
        loc('rnn3.py'): {'expanded-nodes': [],
                         'selected-nodes': [],
                         'top-node': None},
        loc('word2vec.py'): {'expanded-nodes': [],
                             'selected-nodes': [[('function def',
        loc('word2vec.py'),
        'save_checkpoint')]],
                             'top-node': [('generic attribute',
        loc('word2vec.py'),
        'args')]},
        loc('../../astro/make_img.py'): {'expanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../../astro/make_img.py'),
                             'plot')]],
        'top-node': [('generic attribute',
                      loc('../../astro/make_img.py'),
                      'config_path')]},
        loc('../../astro/plot_points.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../astro/plot_points.py'),
                             'y3s')]],
        'top-node': [('generic attribute',
                      loc('../../astro/plot_points.py'),
                      'i')]},
        loc('../../bioinformatics/DBRU.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../bioinformatics/DBRU.py'),
                      'a')]},
        loc('../../bioinformatics/GREP.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../bioinformatics/GREP.py'),
                      'count_kmers')]},
        loc('../../bioinformatics/PCOV.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../bioinformatics/PCOV.py'),
                      'pcov')]},
        loc('../../bioinformatics/rosalind.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../bioinformatics/rosalind.py'),
                      'dbru')]},
        loc('../../dynamics/bacteria.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../dynamics/bacteria.py'),
                      'bacteria')]},
        loc('../../dynamics/barnes_hut.py'): {'expanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../../dynamics/barnes_hut.py'),
                             'add')]],
        'top-node': [('function def',
                      loc('../../dynamics/barnes_hut.py'),
                      'add')]},
        loc('../../dynamics/chaos_book/hw1Rossler/README.md'): {'expanded-no'\
        'des': [],
        'selected-nodes': [None],
        'top-node': None},
        loc('../../dynamics/chaos_book/hw1Rossler/RungeKutta.py'): {'expande'\
        'd-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../dynamics/chaos_book/hw1Rossler/RungeKutta.py'),
                             'xSolution')]],
        'top-node': [('generic attribute',
                      loc('../../dynamics/chaos_book/hw1Rossler/RungeKutta.py'),
                      'Nt')]},
        loc('../../dynamics/lbmFlowAroundCylinder.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../dynamics/lbmFlowAroundCylinder.py'),
                      'col1')]},
        loc('../../dynamics/lv.py'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': None},
        loc('../../dynamics/parityRule.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../dynamics/parityRule.py'),
                      'i')]},
        loc('../../dynamics/strogatz/README.md'): {'expanded-nodes': [],
        'selected-nodes': [None],
        'top-node': None},
        loc('../../dynamics/strogatz/strogatz_6_1.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../dynamics/strogatz/strogatz_6_1.py'),
                             '_')]],
        'top-node': [('generic attribute',
                      loc('../../dynamics/strogatz/strogatz_6_1.py'),
                      'eps')]},
        loc('../../dynamics/strogatz_6_1.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../dynamics/strogatz_6_1.py'),
                      'eps')]},
        loc('../../dynamics/strogatz_6_5_19.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../dynamics/trafficLights.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../dynamics/trafficLights.py'),
                      'CAR')]},
        loc('unknown:<untitled> #89'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('unknown:<untitled> #88'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('unknown:<untitled> #90'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None}},
                                'browse_mode': u'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {u'Derived Classes': False,
        u'Imported': False,
        u'Modules': True}}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [1,
                          0],
        'notebook_display': 'normal',
        'notebook_percent': 0.30000000000000004,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': u'..\\..\\..\\Program Files (x86)\\Wing Personal 7.2\\bin\\voro',
                                  'fRecursive': True,
                                  'fType': 'current-file'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': u'Load',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': True,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 40,
                                       'fReplaceText': u'N',
                                       'fReverse': False,
                                       'fSearchText': u'n_iters',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': True}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 0L,
                       'folded-linenos': [],
                       'history': {},
                       'launch-id': None,
                       'sel-line': 2L,
                       'sel-line-start': 157L,
                       'selection_end': 157L,
                       'selection_start': 157L,
                       'zoom': 0L}),
                     ('messages',
                      'wide',
                      2,
                      {'current-domain': 0}),
                     ('os-command',
                      'wide',
                      1,
                      {})],
        'primary_view_state': {'editor_states': ('horizontal',
        0.9972027972027973,
        ({'bookmarks': ([[loc('rnn.py'),
                          {'attrib-starts': [('Categories|0|',
        55),
        ('Categories|0|.get_n|0|',
         64)],
                           'code-line': '        return len(self.all_categor'\
        'ies)\r\n',
                           'first-line': 60L,
                           'folded-linenos': [],
                           'sel-line': 65L,
                           'sel-line-start': 2469L,
                           'selection_end': 2469L,
                           'selection_start': 2469L,
                           'zoom': 0L},
                          1624656741.871],
                         [loc('rnn2.py'),
                          {'attrib-starts': [('randomTrainingPair|0|',
        45)],
                           'code-line': '    category = randomChoice(all_cat'\
        'egories)\r\n',
                           'first-line': 26L,
                           'folded-linenos': [],
                           'sel-line': 46L,
                           'sel-line-start': 1832L,
                           'selection_end': 1832L,
                           'selection_start': 1832L,
                           'zoom': 0L},
                          1624656763.121],
                         [loc('rnn.py'),
                          {'attrib-starts': [('Categories|0|',
        55),
        ('Categories|0|.get_n|0|',
         64)],
                           'code-line': '        return len(self.all_categor'\
        'ies)\r\n',
                           'first-line': 60L,
                           'folded-linenos': [],
                           'sel-line': 65L,
                           'sel-line-start': 2469L,
                           'selection_end': 2469L,
                           'selection_start': 2469L,
                           'zoom': 0L},
                          1624656781.473],
                         [loc('rnn2.py'),
                          {'attrib-starts': [('randomTrainingPair|0|',
        45)],
                           'code-line': '    category = randomChoice(all_cat'\
        'egories)\r\n',
                           'first-line': 26L,
                           'folded-linenos': [],
                           'sel-line': 46L,
                           'sel-line-start': 1832L,
                           'selection_end': 1832L,
                           'selection_start': 1832L,
                           'zoom': 0L},
                          1624656807.499],
                         [loc('rnn.py'),
                          {'attrib-starts': [('Categories|0|',
        55),
        ('Categories|0|.get_n|0|',
         64)],
                           'code-line': '        return len(self.all_categor'\
        'ies)\r\n',
                           'first-line': 57L,
                           'folded-linenos': [],
                           'sel-line': 65L,
                           'sel-line-start': 2469L,
                           'selection_end': 2469L,
                           'selection_start': 2469L,
                           'zoom': 0L},
                          1624656816.258],
                         [loc('rnn2.py'),
                          {'attrib-starts': [],
                           'code-line': 'from rnn               import Alpha'\
        'bet, Categories, Timer\r\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 10L,
                           'sel-line-start': 393L,
                           'selection_end': 450L,
                           'selection_start': 450L,
                           'zoom': 0L},
                          1624657290.26],
                         [loc('rnn2.py'),
                          {'attrib-starts': [],
                           'code-line': 'from os.path           import basen'\
        'ame, splitext\r\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 8L,
                           'sel-line-start': 304L,
                           'selection_end': 338L,
                           'selection_start': 334L,
                           'zoom': 0L},
                          1624657290.924],
                         [loc('rnn2.py'),
                          {'attrib-starts': [],
                           'code-line': 'from os.path           import basen'\
        'ame, splitext\r\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 8L,
                           'sel-line-start': 304L,
                           'selection_end': 339L,
                           'selection_start': 334L,
                           'zoom': 0L},
                          1624657293.097],
                         [loc('rnn2.py'),
                          {'attrib-starts': [],
                           'code-line': 'from matplotlib.pyplot import figur'\
        'e, plot, show\r\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 7L,
                           'sel-line-start': 254L,
                           'selection_end': 302L,
                           'selection_start': 302L,
                           'zoom': 0L},
                          1624657306.762],
                         [loc('rnn2.py'),
                          {'attrib-starts': [],
                           'code-line': 'from torch.nn          import Dropo'\
        'ut, Linear, LogSoftmax, Module, NLLLoss\r\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 11L,
                           'sel-line-start': 465L,
                           'selection_end': 499L,
                           'selection_start': 497L,
                           'zoom': 0L},
                          1624657307.755],
                         [loc('rnn2.py'),
                          {'attrib-starts': [],
                           'code-line': 'from io                import open'\
        '\r\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 6L,
                           'sel-line-start': 218L,
                           'selection_end': 252L,
                           'selection_start': 248L,
                           'zoom': 0L},
                          1624657310.851],
                         [loc('rnn2.py'),
                          {'attrib-starts': [],
                           'code-line': 'from glob              import glob'\
        '\r\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 5L,
                           'sel-line-start': 182L,
                           'selection_end': 216L,
                           'selection_start': 216L,
                           'zoom': 0L},
                          1624657320.026],
                         [loc('rnn2.py'),
                          {'attrib-starts': [],
                           'code-line': '    n_iters       = 100000\r\n',
                           'first-line': 117L,
                           'folded-linenos': [],
                           'sel-line': 128L,
                           'sel-line-start': 4677L,
                           'selection_end': 4688L,
                           'selection_start': 4681L,
                           'zoom': 0L},
                          1624657392.456],
                         [loc('rnn2.py'),
                          {'attrib-starts': [],
                           'code-line': '    N       = 100000\r\n',
                           'first-line': 117L,
                           'folded-linenos': [],
                           'sel-line': 128L,
                           'sel-line-start': 4677L,
                           'selection_end': 4682L,
                           'selection_start': 4681L,
                           'zoom': 0L},
                          1624657402.704],
                         [loc('rnn2.py'),
                          {'attrib-starts': [],
                           'code-line': '    for i in range(1, N + 1):\r\n',
                           'first-line': 117L,
                           'folded-linenos': [],
                           'sel-line': 136L,
                           'sel-line-start': 4960L,
                           'selection_end': 4983L,
                           'selection_start': 4982L,
                           'zoom': 0L},
                          1624657403.71],
                         [loc('rnn2.py'),
                          {'attrib-starts': [],
                           'code-line': "            print (f'{m} {s:.0f} {i"\
        "}, {i / N * 100:.0f}%, {loss}')\r\n",
                           'first-line': 129L,
                           'folded-linenos': [],
                           'sel-line': 142L,
                           'sel-line-start': 5148L,
                           'selection_end': 5192L,
                           'selection_start': 5192L,
                           'zoom': 0L},
                          1624657404.723],
                         [loc('rnn2.py'),
                          {'attrib-starts': [],
                           'code-line': "    for filename in glob('data/name"\
        "s/*.txt'):\r\n",
                           'first-line': 112L,
                           'folded-linenos': [],
                           'sel-line': 128L,
                           'sel-line-start': 4829L,
                           'selection_end': 4917L,
                           'selection_start': 4833L,
                           'zoom': 0L},
                          1624657879.276],
                         [loc('rnn.py'),
                          {'attrib-starts': [('Categories|0|',
        55),
        ('Categories|0|.load|0|',
         60)],
                           'code-line': '    def load(self,pathname,alphabet'\
        '):\r\n',
                           'first-line': 45L,
                           'folded-linenos': [],
                           'sel-line': 60L,
                           'sel-line-start': 2252L,
                           'selection_end': 2288L,
                           'selection_start': 2260L,
                           'zoom': 0L},
                          1624657969.054],
                         [loc('rnn2.py'),
                          {'attrib-starts': [('sample|0|',
        89)],
                           'code-line': '            if topi == alphabet.n -'\
        ' 1:\r\n',
                           'first-line': 89L,
                           'folded-linenos': [],
                           'sel-line': 100L,
                           'sel-line-start': 4032L,
                           'selection_end': 4065L,
                           'selection_start': 4065L,
                           'zoom': 0L},
                          1624658565.027],
                         [loc('rnn.py'),
                          {'attrib-starts': [('Categories|0|',
        55),
        ('Categories|0|.load|0|',
         60)],
                           'code-line': '    def load(self,pathname,alphabet'\
        '):\r\n',
                           'first-line': 33L,
                           'folded-linenos': [],
                           'sel-line': 60L,
                           'sel-line-start': 2252L,
                           'selection_end': 2288L,
                           'selection_start': 2260L,
                           'zoom': 0L},
                          1624658572.525]],
                        20),
          'current-loc': loc('rnn2.py'),
          'editor-state-list': [(loc('../AppData/Local/Programs/Python/Python38/Lib/glob.py'),
                                 {'attrib-starts': [('glob|0|',
        9)],
                                  'code-line': 'def glob(pathname, *, recurs'\
        'ive=False):\r\n',
                                  'first-line': 0L,
                                  'folded-linenos': [],
                                  'sel-line': 9L,
                                  'sel-line-start': 129L,
                                  'selection_end': 137L,
                                  'selection_start': 133L,
                                  'zoom': 0L}),
                                (loc('README.md'),
                                 {'attrib-starts': [],
                                  'code-line': "rnn3.py|[Sean Robersons's NL"\
        "P demo: Translation](https://pytorch.org/tutorials/intermediate/seq"\
        "2seq_translation_tutorial.html)\r\n",
                                  'first-line': 0L,
                                  'folded-linenos': [],
                                  'sel-line': 10L,
                                  'sel-line-start': 527L,
                                  'selection_end': 652L,
                                  'selection_start': 652L,
                                  'zoom': 0L}),
                                (loc('rnn2.py'),
                                 {'attrib-starts': [],
                                  'code-line': '    N               = 100000'\
        '\r\n',
                                  'first-line': 110L,
                                  'folded-linenos': [],
                                  'sel-line': 121L,
                                  'sel-line-start': 4725L,
                                  'selection_end': 4753L,
                                  'selection_start': 4753L,
                                  'zoom': 0L}),
                                (loc('rnn3.py'),
                                 {'attrib-starts': [],
                                  'code-line': '',
                                  'first-line': 0L,
                                  'folded-linenos': [],
                                  'sel-line': 2L,
                                  'sel-line-start': 82L,
                                  'selection_end': 82L,
                                  'selection_start': 82L,
                                  'zoom': 0L}),
                                (loc('rnn.py'),
                                 {'attrib-starts': [('Categories|0|',
        55),
        ('Categories|0|.load|0|',
         60)],
                                  'code-line': '    def load(self,pathname,a'\
        'lphabet):\r\n',
                                  'first-line': 33L,
                                  'folded-linenos': [],
                                  'sel-line': 60L,
                                  'sel-line-start': 2252L,
                                  'selection_end': 2288L,
                                  'selection_start': 2260L,
                                  'zoom': 0L})],
          'has-focus': True,
          'locked': False},
         [loc('../AppData/Local/Programs/Python/Python38/Lib/glob.py'),
          loc('README.md'),
          loc('rnn2.py'),
          loc('rnn3.py'),
          loc('rnn.py')]),
        ({'bookmarks': ([[loc('README.md'),
                          {'attrib-starts': [],
                           'code-line': '# NLP\r\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 0L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1623117615.69],
                         [loc('nano-corpus.txt'),
                          {'attrib-starts': [],
                           'code-line': 'He is a king.\r\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 0L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1623193133.233],
                         [loc('word2vec.py'),
                          {'attrib-starts': [],
                           'code-line': '#    Copyright (C) 2021 Simon A. Cr'\
        'ase\r\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 0L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1623193135.246],
                         [loc('../AppData/Local/Programs/Python/Python38/Lib/encodings/cp1252.py'),
                          {'attrib-starts': [],
                           'code-line': "\"\"\" Python Character Mapping Cod"\
        "ec cp1252 generated from 'MAPPINGS/VENDORS/MICSFT/WINDOWS/CP1252.TX"\
        "T' with gencodec.py.\r\n",
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 0L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1623453958.675],
                         [loc('tokenizer.py'),
                          {'attrib-starts': [],
                           'code-line': '#    Copyright (C) 2021 Simon A. Cr'\
        'ase\r\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 0L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1623453959.634],
                         [loc('chapter1.txt'),
                          {'attrib-starts': [],
                           'code-line': 'In my younger and more vulnerable y'\
        'ears my father gave me some advice\r\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 0L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1623453960.746],
                         [loc('README.md'),
                          {'attrib-starts': [],
                           'code-line': '# NLP\r\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 0L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1623453961.866],
                         [loc('64317-0.txt'),
                          {'attrib-starts': [],
                           'code-line': 'The Project Gutenberg eBook of The '\
        'Great Gatsby, by F. Scott Fitzgerald\r\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 0L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1623453968.468],
                         [loc('word2vec.py'),
                          {'attrib-starts': [],
                           'code-line': '#    Copyright (C) 2021 Simon A. Cr'\
        'ase\r\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 0L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1623573863.145],
                         [loc('plot.py'),
                          {'attrib-starts': [],
                           'code-line': '#    Copyright (C) 2021 Simon A. Cr'\
        'ase\r\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 0L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1623573869.139],
                         [loc('README.md'),
                          {'attrib-starts': [],
                           'code-line': '# NLP\r\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 0L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1623573870.513],
                         [loc('word2vec.py'),
                          {'attrib-starts': [],
                           'code-line': '#    Copyright (C) 2021 Simon A. Cr'\
        'ase\r\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 0L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1623725807.64],
                         [loc('tokenizer.py'),
                          {'attrib-starts': [],
                           'code-line': '#    Copyright (C) 2021 Simon A. Cr'\
        'ase\r\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 0L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1623725808.955],
                         [loc('plot.py'),
                          {'attrib-starts': [],
                           'code-line': '#    Copyright (C) 2021 Simon A. Cr'\
        'ase\r\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 0L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1623725810.06],
                         [loc('README.md'),
                          {'attrib-starts': [],
                           'code-line': '# NLP\r\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 0L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1623725811.389],
                         [loc('../../../Program Files (x86)/Wing Personal 7.2/resources/builtin-pi-files/__os__/win32/3.8/re.pi'),
                          {'attrib-starts': [],
                           'code-line': '# coding: utf-8\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 0L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1623725812.743],
                         [loc('word2vec.py'),
                          {'attrib-starts': [],
                           'code-line': '#    Copyright (C) 2021 Simon A. Cr'\
        'ase\r\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 0L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1624157583.514],
                         [loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/axes/_base.py'),
                          {'attrib-starts': [],
                           'code-line': 'from collections import OrderedDict'\
        '\r\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 0L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1624157584.362],
                         [loc('rnn.py'),
                          {'attrib-starts': [],
                           'code-line': 'from __future__ import unicode_lite'\
        'rals, print_function, division\r\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 0L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1624505923.792],
                         [loc('rnn.py'),
                          {'attrib-starts': [],
                           'code-line': '# https://pytorch.org/tutorials/int'\
        'ermediate/char_rnn_classification_tutorial.html\r\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 0L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1624648684.065]],
                        20),
          'current-loc': loc('rnn.py'),
          'editor-state-list': [(loc('../AppData/Local/Programs/Python/Python38/Lib/glob.py'),
                                 {}),
                                (loc('README.md'),
                                 {}),
                                (loc('rnn2.py'),
                                 {}),
                                (loc('rnn3.py'),
                                 {'attrib-starts': [],
                                  'code-line': '',
                                  'first-line': 0L,
                                  'folded-linenos': [],
                                  'sel-line': 2L,
                                  'sel-line-start': 82L,
                                  'selection_end': 82L,
                                  'selection_start': 82L,
                                  'zoom': 0L}),
                                (loc('rnn.py'),
                                 {'attrib-starts': [],
                                  'code-line': '# https://pytorch.org/tutori'\
        'als/intermediate/char_rnn_classification_tutorial.html\r\n',
                                  'first-line': 0L,
                                  'folded-linenos': [],
                                  'sel-line': 0L,
                                  'sel-line-start': 0L,
                                  'selection_end': 0L,
                                  'selection_start': 0L,
                                  'zoom': 0L})],
          'has-focus': False,
          'locked': False},
         [loc('../AppData/Local/Programs/Python/Python38/Lib/glob.py'),
          loc('README.md'),
          loc('rnn2.py'),
          loc('rnn3.py'),
          loc('rnn.py')])),
                               'open_files': [u'README.md',
        u'rnn3.py',
        u'rnn.py',
        u'rnn2.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.5},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((1,
                           0),
                          1624658663.244),
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {},
                 'splits': 1,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    0),
                                   1624652081.659),
                 'user_data': {}},
        'window-alloc': (147,
                         108,
                         1702,
                         907)}]}
guimgr.recent-documents = [loc('rnn2.py'),
                           loc('rnn.py'),
                           loc('../AppData/Local/Programs/Python/Python38/Lib/glob.py'),
                           loc('rnn3.py'),
                           loc('README.md')]
guimgr.visual-state = {loc('../../../Program Files (x86)/Wing Personal 7.2/resources/builtin-pi-files/__os__/win32/3.8/re.pi'): {'a'\
        'ttrib-starts': [],
        'code-line': '# coding: utf-8\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../../Program Files (x86)/Wing Personal 7.2/resources/builtin-pi-files/__os__/win32/3.8/unicodedata.pi'): {'a'\
        'ttrib-starts': [('category|0|',
                          117)],
        'code-line': 'def category(chr):\n',
        'first-line': 103L,
        'folded-linenos': [],
        'sel-line': 117L,
        'sel-line-start': 3923L,
        'selection_end': 3935L,
        'selection_start': 3927L,
        'zoom': 0L},
                       loc('../../../Program Files (x86)/Wing Personal 7.2/resources/typeshed/stdlib/3/os/__init__.pyi'): {'a'\
        'ttrib-starts': [('remove|1|',
                          439)],
        'code-line': '    def remove(path: _PathType) -> None: ...\n',
        'first-line': 425L,
        'folded-linenos': [],
        'sel-line': 439L,
        'sel-line-start': 16110L,
        'selection_end': 16124L,
        'selection_start': 16118L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/encodings/cp1252.py'): {'a'\
        'ttrib-starts': [('IncrementalDecoder|0|',
                          20),
                         ('IncrementalDecoder|0|.decode|0|',
                          21)],
        'code-line': '        return codecs.charmap_decode(input,self.errors'\
                     ',decoding_table)[0]\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 22L,
        'sel-line-start': 696L,
        'selection_end': 696L,
        'selection_start': 696L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/random.py'): {'a'\
        'ttrib-starts': [('Random|0|',
                          77),
                         ('Random|0|.sample|0|',
                          314)],
        'code-line': '            raise TypeError("Population must be a sequ'\
                     'ence or set.  For dicts, use list(d).")\r\n',
        'first-line': 336L,
        'folded-linenos': [],
        'sel-line': 358L,
        'sel-line-start': 13571L,
        'selection_end': 13571L,
        'selection_start': 13571L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/axes/_base.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'from collections import OrderedDict\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/spacy/util.py'): {'a'\
        'ttrib-starts': [('load_model|0|',
                          300)],
        'code-line': '    raise IOError(Errors.E050.format(name=name))\r\n',
        'first-line': 308L,
        'folded-linenos': [],
        'sel-line': 330L,
        'sel-line-start': 12888L,
        'selection_end': 12888L,
        'selection_start': 12888L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/autograd/__init__.py'): {'a'\
        'ttrib-starts': [('backward|0|',
                          44)],
        'code-line': '    Variable._execution_engine.run_backward(\r\n',
        'first-line': 84L,
        'folded-linenos': [],
        'sel-line': 97L,
        'sel-line-start': 4634L,
        'selection_end': 4634L,
        'selection_start': 4634L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/nn/functional.py'): {'a'\
        'ttrib-starts': [('nll_loss|0|',
                          2054)],
        'code-line': "        raise ValueError('Expected input batch_size ({"\
                     "}) to match target batch_size ({}).'\r\n",
        'first-line': 2092L,
        'folded-linenos': [],
        'sel-line': 2111L,
        'sel-line-start': 93681L,
        'selection_end': 93681L,
        'selection_start': 93681L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/nn/modules/module.py'): {'a'\
        'ttrib-starts': [('Module|0|',
                          31),
                         ('Module|0|.parameters|0|',
                          862)],
        'code-line': '            yield param\r\n',
        'first-line': 866L,
        'folded-linenos': [],
        'sel-line': 884L,
        'sel-line-start': 38148L,
        'selection_end': 38148L,
        'selection_start': 38148L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/serialization.py'): {'a'\
        'ttrib-starts': [('save|0|',
                          334)],
        'code-line': 'def save(obj, f, pickle_module=pickle, pickle_protocol'\
                     '=DEFAULT_PROTOCOL, _use_new_zipfile_serialization=Fals'\
                     'e):\r\n',
        'first-line': 320L,
        'folded-linenos': [],
        'sel-line': 334L,
        'sel-line-start': 10625L,
        'selection_end': 10633L,
        'selection_start': 10629L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/tensor.py'): {'a'\
        'ttrib-starts': [('Tensor|0|',
                          40),
                         ('Tensor|0|.grad|0|',
                          757)],
        'code-line': '        if self.requires_grad and not hasattr(self, "r'\
                     'etains_grad") and not self.is_leaf and self._grad is N'\
                     'one:\r\n',
        'first-line': 734L,
        'folded-linenos': [],
        'sel-line': 744L,
        'sel-line-start': 31109L,
        'selection_end': 31109L,
        'selection_start': 31109L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/string.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'ascii_letters = ascii_lowercase + ascii_uppercase\r\n',
        'first-line': 12L,
        'folded-linenos': [],
        'sel-line': 26L,
        'sel-line-start': 1053L,
        'selection_end': 1066L,
        'selection_start': 1053L,
        'zoom': 0L},
                       loc('64317-0.txt'): {'attrib-starts': [],
        'code-line': 'The Project Gutenberg eBook of The Great Gatsby, by F.'\
                     ' Scott Fitzgerald\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('bt.py'): {'attrib-starts': [],
                                      'code-line': '            break\r\n',
                                      'first-line': 84L,
                                      'folded-linenos': [],
                                      'sel-line': 104L,
                                      'sel-line-start': 3188L,
                                      'selection_end': 3205L,
                                      'selection_start': 3205L,
                                      'zoom': 0L},
                       loc('chapter1.txt'): {'attrib-starts': [],
        'code-line': 'In my younger and more vulnerable years my father gave'\
                     ' me some advice\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('nano-corpus.txt'): {'attrib-starts': [],
        'code-line': 'He is a king.\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('plot.py'): {'attrib-starts': [],
        'code-line': '#    Copyright (C) 2021 Simon A. Crase\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('spacy-vectors.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('tokenizer.py'): {'attrib-starts': [],
        'code-line': '#    Copyright (C) 2021 Simon A. Crase\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('word2vec.py'): {'attrib-starts': [],
        'code-line': '#    Copyright (C) 2021 Simon A. Crase\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L}}
proj.build-cmd = {None: ('default',
                         None)}
proj.env-vars = {None: ('default',
                        [u''])}
proj.pyexec = {None: ('custom',
                      u'/Users/Weka/AppData/Local/Programs/Python/Python38/python')}
search.replace-history = [u'N',
                          u'i',
                          u'N_HIDDEN',
                          u'N_CONFUSION',
                          u'PLOT_FREQUENCY',
                          u'PRINT_FREQUENCY',
                          u'LEARNING_RATE',
                          u'n',
                          u'alphabet',
                          u'Alphabet',
                          u'ax2',
                          u'embedding',
                          u'create-1hot-vector',
                          u'word_indices',
                          u'.word_indices']
search.search-history = [u'n_iters',
                         u'open',
                         u'basen',
                         u'iter',
                         u'nn',
                         u'torch',
                         u'n_hidden',
                         u'n_confusion',
                         u'plot_every',
                         u'print_every',
                         u'learning_rate',
                         u'n_letters',
                         u'letter',
                         u'Letters',
                         u'ax',
                         u'nano',
                         u'embedding_dims',
                         u'embedding',
                         u'Load',
                         u'get_input_layer']

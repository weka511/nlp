#!wing
#!version=7.0
##################################################################
# Wing project file                                              #
##################################################################
[project attributes]
proj.file-list = [loc('64317-0.txt'),
                  loc('chapter1.txt'),
                  loc('nano-corpus.txt'),
                  loc('plot.py'),
                  loc('README.md'),
                  loc('tokenizer.py'),
                  loc('word2vec.py')]
proj.file-type = 'normal'
proj.launch-config = {loc('plot.py'): ('project',
                                       (u'gatsby2.pt gatsby3.pt --show',
        '')),
                      loc('word2vec.py'): ('project',
        (u'resume --saved gatsby2 --N 2',
         ''))}
[user attributes]
debug.recent-run-args = {loc('plot.py'): [u'gatsby2.pt gatsby3.pt --show',
        u'gatsby2.pt gatasby3.pt --show',
        u'gatsby2.pt --show',
        u'gatsby1.pt --show',
        u'foo bar baz --show',
        u'foo bar baz'],
                         loc('word2vec.py'): [u'resume --saved gatsby2 --N 2',
        u'resume --saved gatsby2 --num_epochs 2',
        u'train --output test --N 25 --nano --frequency 1',
        u'train --output test --N 25 --nano',
        u'train --output test --N 5 --nano',
        u'train --output test --N 5',
        u'test --output test --N 5',
        u'test --output gatsby',
        u'test',
        u'train --frequency 1 --burn 0 --N 10 --m 100  --show  --out gatsby',
        u'train --frequency 1 --burn 0 --N 10 -m 100  --show',
        u'train --frequency 1 --burn 0',
        u'train --frequency 1',
        u'train --corpus 64317-0.txt',
        u'train --corpus 64317-0',
        u'--corpus 64317-0',
        u'--help',
        u'test --out shuffled',
        u'train --out temp --show',
        u'train --out temp --show --shuffle',
        u'train --out temp',
        u'train',
        u'train --pairs',
        u'train --N 100 --frequency 10 --burn 1  --show',
        u'train --N 100 --frequency 10 --burn 1',
        u'train --N 100 --frequency 10',
        u'train --N 100 --frequency 10 --burn 0  --show',
        u'--N 100 --frequency 10 --burn 0  --show',
        u'train --N 100 --frequency 10 --burn 0  -show',
        u'--N 100 --frequency 10 --burn 0']}
edit.file-encoding = {loc('chapter1.txt'): 'utf_8'}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'zRuoo7lo1K5bGtfhUhOsW4cZwV'\
        '1Zxhqw',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [2],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.25,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [],
                                 'selected-nodes': [(0,)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('../../../Program Files (x86)/Wing Personal 7.2/resources/builtin-pi-files/__os__/win32/3.8/builtins.pi'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../Program Files (x86)/Wing Personal 7.2/resources/builtin-pi-files/__os__/win32/3.8/builtins.pi'),
                      'abs')]},
        loc('../../../Program Files (x86)/Wing Personal 7.2/resources/typeshed/stdlib/3/random.pyi'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../../Program Files (x86)/Wing Personal 7.2/resources/typeshed/stdlib/3/random.pyi'),
                             '_T')]],
        'top-node': [('function def',
                      loc('../../../Program Files (x86)/Wing Personal 7.2/resources/typeshed/stdlib/3/random.pyi'),
                      'betavariate')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/encodings/cp1252.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('../AppData/Local/Programs/Python/Python38/Lib/encodings/cp1252.py'),
                             'StreamWriter')]],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/encodings/cp1252.py'),
                      'Codec')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/inspect.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../AppData/Local/Programs/Python/Python38/Lib/inspect.py'),
                             '__author__')]],
        'top-node': [('generic attribute',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/inspect.py'),
                      'ArgInfo')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/ntpath.py'): {'ex'\
        'panded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/ntpath.py'),
                      'abspath')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/random.py'): {'ex'\
        'panded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../Program Files (x86)/Wing Personal 7.2/resources/typeshed/stdlib/3/random.pyi'),
                      'betavariate')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/PIL/Image.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/PIL/Image.py'),
                      'ADAPTIVE')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/PIL/ImageFile.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/PIL/ImageFile.py'),
                      'ERRORS')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/hpacellseg/cellsegmentator.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/hpacellseg/cellsegmentator.py'),
                      'CellSegmentator')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/hpacellseg/utils.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/hpacellseg/utils.py'),
                      'download_with_url')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/imageio/core/request.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/imageio/core/request.py'),
                      'EXAMPLE_IMAGES')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/__init__.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/afm.py'),
                      '')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/artist.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/artist.py'),
                      'allow_rasterization')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/axes/_axes.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/axes/_axes.py'),
                      'Axes')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/axes/_base.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/axes/_base.py'),
                      '_AxesBase')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/backend_bases.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/backend_bases.py'),
                      'button_press_handler')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/colorbar.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/colorbar.py'),
                             '_set_ticks_on_axis_warn')]],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/colorbar.py'),
                      'Colorbar')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/colors.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/colors.py'),
                      'BoundaryNorm')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/figure.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/figure.py'),
                      'AxesStack')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/gridspec.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/gridspec.py'),
                      'GridSpec')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/image.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/image.py'),
                             '_rgb_to_rgba')]],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/image.py'),
                      'AxesImage')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/patches.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/patches.py'),
                      'Arc')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/pyplot.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/pyplot.py'),
                      'acorr')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/transforms.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/transforms.py'),
                      'Affine2D')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/numpy/core/_methods.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/numpy/core/_methods.py'),
                             '_var')]],
        'top-node': [('generic attribute',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/numpy/core/_methods.py'),
                      'umr_all')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/numpy/core/fromnumeric.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/numpy/core/fromnumeric.py'),
                      'alen')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/numpy/lib/npyio.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/numpy/lib/npyio.py'),
                      'array_function_dispatch')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/pandas/core/internals/construction.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/pandas/core/internals/construction.py'),
                      'arrays_to_mgr')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/scipy/ndimage/interpolation.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/scipy/ndimage/interpolation.py'),
                      'affine_transform')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/scipy/spatial/_plotutils.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/scipy/spatial/_plotutils.py'),
                             '__all__')]],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/scipy/spatial/_plotutils.py'),
                      'convex_hull_plot_2d')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/spacy/util.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/spacy/util.py'),
                      'add_lookups')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/nn/functional.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/nn/functional.py'),
                      'adaptive_avg_pool1d')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/nn/modules/conv.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/nn/modules/conv.py'),
                             '_ConvTransposeNd')]],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/nn/modules/conv.py'),
                      'Conv1d')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/serialization.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/serialization.py'),
                      'check_module_version_greater_or_equal')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/traceback.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../AppData/Local/Programs/Python/Python38/Lib/traceback.py'),
                             '__all__')]],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/traceback.py'),
                      'clear_frames')]},
        loc('../AppData/Local/Wing Personal 7/pi-cache/3.8/C/Users/Weka/AppData/Local/Programs/Python/Python38/Lib/site-packages/numpy/core/_multiarray_umath.pi'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Wing Personal 7/pi-cache/3.8/C/Users/Weka/AppData/Local/Programs/Python/Python38/Lib/site-packages/numpy/core/_multiarray_umath.pi'),
                      'absolute')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/PIL/ImageFile.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Roaming/Python/Python38/site-packages/PIL/ImageFile.py'),
                      'ERRORS')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/image.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/image.py'),
                      'AxesImage')]},
        loc('../ait/ExploreExploit.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../ait/ExploreExploit.py'),
                             'D')]],
        'top-node': [('generic attribute',
                      loc('../ait/ExploreExploit.py'),
                      'A')]},
        loc('../hon/generate.py'): {'expanded-nodes': [],
                                    'selected-nodes': [],
                                    'top-node': None},
        loc('../hon/spike1.py'): {'expanded-nodes': [],
                                  'selected-nodes': [],
                                  'top-node': [('generic attribute',
        loc('../hon/spike1.py'),
        'file')]},
        loc('../hon/visualize.py'): {'expanded-nodes': [],
                                     'selected-nodes': [],
                                     'top-node': [('generic attribute',
        loc('../hon/visualize.py'),
        'axes')]},
        loc('../hpa-scc/CellSegmentatorTest.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../hpa-scc/CellSegmentatorTest.py'),
                      'ax')]},
        loc('../hpa-scc/README.md'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': None},
        loc('../hpa-scc/analyze-labels.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../hpa-scc/analyze-labels.py'),
                             'csvfile')]],
        'top-node': [('generic attribute',
                      loc('../hpa-scc/analyze-labels.py'),
                      'args')]},
        loc('../hpa-scc/census.py'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': [('generic attribute',
        loc('../hpa-scc/census.py'),
        'axs')]},
        loc('../hpa-scc/dirichlet.py'): {'expanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../hpa-scc/dirichlet.py'),
                             'get_dist')]],
        'top-node': [('generic attribute',
                      loc('../hpa-scc/dirichlet.py'),
                      'args')]},
        loc('../hpa-scc/encoder.py'): {'expanded-nodes': [],
                                       'selected-nodes': [None],
                                       'top-node': None},
        loc('../hpa-scc/ex.py'): {'expanded-nodes': [],
                                  'selected-nodes': [],
                                  'top-node': None},
        loc('../hpa-scc/hpascc.py'): {'expanded-nodes': [],
                                      'selected-nodes': [[('function def',
        loc('../hpa-scc/hpascc.py'),
        'read_training_expectations')]],
                                      'top-node': [('generic attribute',
        loc('../hpa-scc/hpascc.py'),
        'BLUE')]},
        loc('../hpa-scc/image_seg.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../hpa-scc/image_seg.py'),
                             'info')]],
        'top-node': [('generic attribute',
                      loc('../hpa-scc/image_seg.py'),
                      'dataset')]},
        loc('../hpa-scc/logs.py'): {'expanded-nodes': [],
                                    'selected-nodes': [[('function def',
        loc('../hpa-scc/logs.py'),
        'expand')]],
                                    'top-node': [('generic attribute',
        loc('../hpa-scc/logs.py'),
        'args')]},
        loc('../hpa-scc/old/README.md'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../hpa-scc/old/train2.py'): {'expanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../hpa-scc/old/train2.py'),
                             'restart')]],
        'top-node': [('generic attribute',
                      loc('../hpa-scc/old/train2.py'),
                      'args')]},
        loc('../hpa-scc/old/visualize.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../hpa-scc/old/vizcnn.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../hpa-scc/old/vizcnn.py'),
                      'args')]},
        loc('../hpa-scc/otsu.py'): {'expanded-nodes': [],
                                    'selected-nodes': [[('function def',
        loc('../hpa-scc/otsu.py'),
        'get_thinned')]],
                                    'top-node': [('generic attribute',
        loc('../hpa-scc/otsu.py'),
        'BLUE')]},
        loc('../hpa-scc/seg.py'): {'expanded-nodes': [],
                                   'selected-nodes': [],
                                   'top-node': [('generic attribute',
        loc('../hpa-scc/seg.py'),
        'cell_mask')]},
        loc('../hpa-scc/segment.py'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': [('function def',
        loc('../hpa-scc/segment.py'),
        'apply_masks')]},
        loc('../hpa-scc/select_images.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../hpa-scc/select_images.py'),
                      'args')]},
        loc('../hpa-scc/slice.py'): {'expanded-nodes': [],
                                     'selected-nodes': [[('function def',
        loc('../hpa-scc/slice.py'),
        'create_image_target')]],
                                     'top-node': [('generic attribute',
        loc('../hpa-scc/slice.py'),
        'args')]},
        loc('../hpa-scc/slice2.py'): {'expanded-nodes': [],
                                      'selected-nodes': [[('function def',
        loc('../hpa-scc/slice2.py'),
        'create_image_target')]],
                                      'top-node': [('generic attribute',
        loc('../hpa-scc/slice2.py'),
        'args')]},
        loc('../hpa-scc/spike5.py'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': [('generic attribute',
        loc('../hpa-scc/spike5.py'),
        'axs')]},
        loc('../hpa-scc/spike6.py'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': [('generic attribute',
        loc('../hpa-scc/spike6.py'),
        'axs')]},
        loc('../hpa-scc/spike7.py'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': [('generic attribute',
        loc('../hpa-scc/spike7.py'),
        'axs')]},
        loc('../hpa-scc/spike8.py'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': [('generic attribute',
        loc('../hpa-scc/spike8.py'),
        'axs')]},
        loc('../hpa-scc/spikes/spike6.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../hpa-scc/spikes/spike6.py'),
                             'nrows')]],
        'top-node': [('generic attribute',
                      loc('../hpa-scc/spikes/spike6.py'),
                      'axs')]},
        loc('../hpa-scc/spikes/spike7.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../hpa-scc/spikes/spike7.py'),
                             'nrows')]],
        'top-node': [('generic attribute',
                      loc('../hpa-scc/spikes/spike7.py'),
                      'axs')]},
        loc('../hpa-scc/spikes/spike8.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../hpa-scc/spikes/spike8.py'),
                             'y0')]],
        'top-node': [('generic attribute',
                      loc('../hpa-scc/spikes/spike8.py'),
                      'axs')]},
        loc('../hpa-scc/spikes/watershed.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../hpa-scc/spikes/watershed.py'),
                      'args')]},
        loc('../hpa-scc/split.py'): {'expanded-nodes': [],
                                     'selected-nodes': [],
                                     'top-node': [('generic attribute',
        loc('../hpa-scc/split.py'),
        'args')]},
        loc('../hpa-scc/submission.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../hpa-scc/train.py'): {'expanded-nodes': [[('class def',
        loc('../hpa-scc/train.py'),
        'CellDataset')],
        [('class def',
          loc('../hpa-scc/train.py'),
          'Net')]],
                                     'selected-nodes': [[('class def',
        loc('../hpa-scc/train.py'),
        'Net')]],
                                     'top-node': [('generic attribute',
        loc('../hpa-scc/train.py'),
        'args')]},
        loc('../hpa-scc/train2.py'): {'expanded-nodes': [],
                                      'selected-nodes': [[('function def',
        loc('../hpa-scc/train2.py'),
        'restart')]],
                                      'top-node': [('generic attribute',
        loc('../hpa-scc/train2.py'),
        'args')]},
        loc('../hpa-scc/utils.py'): {'expanded-nodes': [],
                                     'selected-nodes': [],
                                     'top-node': [('function def',
        loc('../hpa-scc/utils.py'),
        'create_xkcd_colours')]},
        loc('../hpa-scc/visualize.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../hpa-scc/visualize.py'),
                             'Training')]],
        'top-node': [('generic attribute',
                      loc('../hpa-scc/visualize.py'),
                      'args')]},
        loc('../hpa-scc/vizcnn.py'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': [('generic attribute',
        loc('../hpa-scc/vizcnn.py'),
        'args')]},
        loc('../hpa-scc/worklist.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../hpa-scc/worklist.py'),
                      'args')]},
        loc('../../astro/make_img.py'): {'expanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../../astro/make_img.py'),
                             'plot')]],
        'top-node': [('generic attribute',
                      loc('../../astro/make_img.py'),
                      'config_path')]},
        loc('../../astro/plot_points.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../astro/plot_points.py'),
                             'y3s')]],
        'top-node': [('generic attribute',
                      loc('../../astro/plot_points.py'),
                      'i')]},
        loc('../../bioinformatics/DBRU.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../bioinformatics/DBRU.py'),
                      'a')]},
        loc('../../bioinformatics/GREP.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../bioinformatics/GREP.py'),
                      'count_kmers')]},
        loc('../../bioinformatics/PCOV.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../bioinformatics/PCOV.py'),
                      'pcov')]},
        loc('../../bioinformatics/rosalind.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../bioinformatics/rosalind.py'),
                      'dbru')]},
        loc('../../dynamics/bacteria.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../dynamics/bacteria.py'),
                      'bacteria')]},
        loc('../../dynamics/barnes_hut.py'): {'expanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../../dynamics/barnes_hut.py'),
                             'add')]],
        'top-node': [('function def',
                      loc('../../dynamics/barnes_hut.py'),
                      'add')]},
        loc('../../dynamics/chaos_book/hw1Rossler/README.md'): {'expanded-no'\
        'des': [],
        'selected-nodes': [None],
        'top-node': None},
        loc('../../dynamics/chaos_book/hw1Rossler/RungeKutta.py'): {'expande'\
        'd-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../dynamics/chaos_book/hw1Rossler/RungeKutta.py'),
                             'xSolution')]],
        'top-node': [('generic attribute',
                      loc('../../dynamics/chaos_book/hw1Rossler/RungeKutta.py'),
                      'Nt')]},
        loc('../../dynamics/lbmFlowAroundCylinder.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../dynamics/lbmFlowAroundCylinder.py'),
                      'col1')]},
        loc('../../dynamics/lv.py'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': None},
        loc('../../dynamics/parityRule.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../dynamics/parityRule.py'),
                      'i')]},
        loc('../../dynamics/strogatz/README.md'): {'expanded-nodes': [],
        'selected-nodes': [None],
        'top-node': None},
        loc('../../dynamics/strogatz/strogatz_6_1.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../dynamics/strogatz/strogatz_6_1.py'),
                             '_')]],
        'top-node': [('generic attribute',
                      loc('../../dynamics/strogatz/strogatz_6_1.py'),
                      'eps')]},
        loc('../../dynamics/strogatz_6_1.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../dynamics/strogatz_6_1.py'),
                      'eps')]},
        loc('../../dynamics/strogatz_6_5_19.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../dynamics/trafficLights.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../dynamics/trafficLights.py'),
                      'CAR')]},
        loc('unknown:<untitled> #1'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': None},
        loc('unknown:<untitled> #2'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': None}},
                                'browse_mode': u'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {u'Derived Classes': False,
        u'Imported': False,
        u'Modules': True}}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [1,
                          1],
        'notebook_display': 'normal',
        'notebook_percent': 0.30000000000000004,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': u'..\\..\\..\\Program Files (x86)\\Wing Personal 7.2\\bin\\voro',
                                  'fRecursive': True,
                                  'fType': 'current-file'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': u'Load',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': True,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 40,
                                       'fReplaceText': u'embeddings',
                                       'fReverse': False,
                                       'fSearchText': u'embedded',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': True}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 0L,
                       'folded-linenos': [],
                       'history': {},
                       'launch-id': None,
                       'sel-line': 2L,
                       'sel-line-start': 157L,
                       'selection_end': 157L,
                       'selection_start': 157L,
                       'zoom': 0L}),
                     ('messages',
                      'wide',
                      2,
                      {'current-domain': 0}),
                     ('os-command',
                      'wide',
                      1,
                      {})],
        'primary_view_state': {'editor_states': ('horizontal',
        0.9972027972027973,
        ({'bookmarks': ([[loc('word2vec.py'),
                          {'attrib-starts': [],
                           'code-line': '            W1,W2,Epochs,Losses = t'\
        'rain_start(idx_pairs,vocabulary_size,\r\n',
                           'first-line': 245L,
                           'folded-linenos': [],
                           'sel-line': 264L,
                           'sel-line-start': 10785L,
                           'selection_end': 10830L,
                           'selection_start': 10819L,
                           'zoom': 0L},
                          1623526871.414],
                         [loc('word2vec.py'),
                          {'attrib-starts': [],
                           'code-line': '            W1,W2,Epochs,Losses = t'\
        'rain_start(idx_pairs,vocabulary_size,\r\n',
                           'first-line': 256L,
                           'folded-linenos': [],
                           'sel-line': 264L,
                           'sel-line-start': 10869L,
                           'selection_end': 10914L,
                           'selection_start': 10903L,
                           'zoom': 0L},
                          1623526944.086],
                         [loc('word2vec.py'),
                          {'attrib-starts': [('train_start|0|',
        210)],
                           'code-line': '    return train(Variable(randn(emb'\
        'edding_dims, vocabulary_size).float(), requires_grad=True),\r\n',
                           'first-line': 210L,
                           'folded-linenos': [],
                           'sel-line': 220L,
                           'sel-line-start': 7612L,
                           'selection_end': 7628L,
                           'selection_start': 7623L,
                           'zoom': 0L},
                          1623526953.881],
                         [loc('word2vec.py'),
                          {'attrib-starts': [],
                           'code-line': '        train(Variable(W1, W2, idx_'\
        'pairs, vocabulary_size,\r\n',
                           'first-line': 292L,
                           'folded-linenos': [],
                           'sel-line': 303L,
                           'sel-line-start': 12989L,
                           'selection_end': 13030L,
                           'selection_start': 13030L,
                           'zoom': 0L},
                          1623527734.45],
                         [loc('plot.py'),
                          {'attrib-starts': [],
                           'code-line': "        loaded_args = loaded['args'"\
        "]\r\n",
                           'first-line': 21L,
                           'folded-linenos': [],
                           'sel-line': 34L,
                           'sel-line-start': 1544L,
                           'selection_end': 1580L,
                           'selection_start': 1552L,
                           'zoom': 0L},
                          1623527743.454],
                         [loc('word2vec.py'),
                          {'attrib-starts': [],
                           'code-line': '        train(W1, W2, idx_pairs, vo'\
        'cabulary_size,\r\n',
                           'first-line': 292L,
                           'folded-linenos': [],
                           'sel-line': 303L,
                           'sel-line-start': 13025L,
                           'selection_end': 13038L,
                           'selection_start': 13033L,
                           'zoom': 0L},
                          1623530812.397],
                         [loc('word2vec.py'),
                          {'attrib-starts': [],
                           'code-line': '        W1,W2,Epochs,Losses = train'\
        '(W1, W2, idx_pairs, vocabulary_size,\r\n',
                           'first-line': 302L,
                           'folded-linenos': [],
                           'sel-line': 304L,
                           'sel-line-start': 13159L,
                           'selection_end': 13186L,
                           'selection_start': 13180L,
                           'zoom': 0L},
                          1623531933.077],
                         [loc('word2vec.py'),
                          {'attrib-starts': [],
                           'code-line': '        W1,W2,Epochs,Losses = train'\
        '(W1, W2, idx_pairs, vocabulary_size,\r\n',
                           'first-line': 277L,
                           'folded-linenos': [],
                           'sel-line': 289L,
                           'sel-line-start': 12485L,
                           'selection_end': 12485L,
                           'selection_start': 12485L,
                           'zoom': 0L},
                          1623535819.64],
                         [loc('plot.py'),
                          {'attrib-starts': [],
                           'code-line': "        loaded_args = loaded['args'"\
        "]\r\n",
                           'first-line': 24L,
                           'folded-linenos': [],
                           'sel-line': 34L,
                           'sel-line-start': 1544L,
                           'selection_end': 1580L,
                           'selection_start': 1552L,
                           'zoom': 0L},
                          1623535929.381],
                         [loc('word2vec.py'),
                          {'attrib-starts': [],
                           'code-line': '        W1,W2,Epochs,Losses = train'\
        '(W1, W2, idx_pairs, vocabulary_size,\r\n',
                           'first-line': 265L,
                           'folded-linenos': [],
                           'sel-line': 289L,
                           'sel-line-start': 12485L,
                           'selection_end': 12485L,
                           'selection_start': 12485L,
                           'zoom': 0L},
                          1623536248.955],
                         [loc('plot.py'),
                          {'attrib-starts': [],
                           'code-line': "        loaded_args = loaded['args'"\
        "]\r\n",
                           'first-line': 24L,
                           'folded-linenos': [],
                           'sel-line': 34L,
                           'sel-line-start': 1544L,
                           'selection_end': 1580L,
                           'selection_start': 1552L,
                           'zoom': 0L},
                          1623536255.941],
                         [loc('word2vec.py'),
                          {'attrib-starts': [],
                           'code-line': '        W1,W2,Epochs,Losses = train'\
        '(W1, W2, idx_pairs, vocabulary_size,\r\n',
                           'first-line': 241L,
                           'folded-linenos': [],
                           'sel-line': 289L,
                           'sel-line-start': 12485L,
                           'selection_end': 12485L,
                           'selection_start': 12485L,
                           'zoom': 0L},
                          1623536268.855],
                         [loc('plot.py'),
                          {'attrib-starts': [],
                           'code-line': "        loaded_args = loaded['args'"\
        "]\r\n",
                           'first-line': 24L,
                           'folded-linenos': [],
                           'sel-line': 34L,
                           'sel-line-start': 1544L,
                           'selection_end': 1580L,
                           'selection_start': 1552L,
                           'zoom': 0L},
                          1623536591.087],
                         [loc('word2vec.py'),
                          {'attrib-starts': [],
                           'code-line': '        W1,W2,Epochs,Losses = train'\
        '(W1, W2, idx_pairs, vocabulary_size,\r\n',
                           'first-line': 241L,
                           'folded-linenos': [],
                           'sel-line': 289L,
                           'sel-line-start': 12485L,
                           'selection_end': 12485L,
                           'selection_start': 12485L,
                           'zoom': 0L},
                          1623536595.073],
                         [loc('plot.py'),
                          {'attrib-starts': [],
                           'code-line': "        loaded_args = loaded['args'"\
        "]\r\n",
                           'first-line': 27L,
                           'folded-linenos': [],
                           'sel-line': 34L,
                           'sel-line-start': 1544L,
                           'selection_end': 1580L,
                           'selection_start': 1552L,
                           'zoom': 0L},
                          1623536951.549],
                         [loc('word2vec.py'),
                          {'attrib-starts': [],
                           'code-line': "    parser.add_argument('--alpha', "\
        "              type = float, default = 0.0,                        h"\
        "elp = 'Momentum')\r\n",
                           'first-line': 232L,
                           'folded-linenos': [],
                           'sel-line': 216L,
                           'sel-line-start': 7852L,
                           'selection_end': 7928L,
                           'selection_start': 7928L,
                           'zoom': 0L},
                          1623537868.298],
                         [loc('plot.py'),
                          {'attrib-starts': [],
                           'code-line': "        loaded_args = loaded['args'"\
        "]\r\n",
                           'first-line': 9L,
                           'folded-linenos': [],
                           'sel-line': 34L,
                           'sel-line-start': 1544L,
                           'selection_end': 1580L,
                           'selection_start': 1552L,
                           'zoom': 0L},
                          1623537889.828],
                         [loc('word2vec.py'),
                          {'attrib-starts': [],
                           'code-line': '\r\n',
                           'first-line': 230L,
                           'folded-linenos': [],
                           'sel-line': 336L,
                           'sel-line-start': 14739L,
                           'selection_end': 14739L,
                           'selection_start': 14739L,
                           'zoom': 0L},
                          1623541307.645],
                         [loc('plot.py'),
                          {'attrib-starts': [],
                           'code-line': "        T = loaded['Epochs']\r\n",
                           'first-line': 30L,
                           'folded-linenos': [],
                           'sel-line': 50L,
                           'sel-line-start': 2320L,
                           'selection_end': 2348L,
                           'selection_start': 2348L,
                           'zoom': 1L},
                          1623541394.78],
                         [loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/serialization.py'),
                          {'attrib-starts': [('_open_file|0|',
        212),
        ('_open_file|0|.__init__|0|',
         213)],
                           'code-line': '        super(_open_file, self).__i'\
        'nit__(open(name, mode))\r\n',
                           'first-line': 192L,
                           'folded-linenos': [],
                           'sel-line': 214L,
                           'sel-line-start': 6838L,
                           'selection_end': 6838L,
                           'selection_start': 6838L,
                           'zoom': 0L},
                          1623541403.147]],
                        20),
          'current-loc': loc('plot.py'),
          'editor-state-list': [(loc('plot.py'),
                                 {'attrib-starts': [],
                                  'code-line': '',
                                  'first-line': 52L,
                                  'folded-linenos': [],
                                  'sel-line': 64L,
                                  'sel-line-start': 2743L,
                                  'selection_end': 2743L,
                                  'selection_start': 2743L,
                                  'zoom': 1L}),
                                (loc('README.md'),
                                 {'attrib-starts': [],
                                  'code-line': 'nlp.wpr|Wing IDE Project fil'\
        'e\r\n',
                                  'first-line': 0L,
                                  'folded-linenos': [],
                                  'sel-line': 10L,
                                  'sel-line-start': 574L,
                                  'selection_end': 603L,
                                  'selection_start': 603L,
                                  'zoom': 0L}),
                                (loc('word2vec.py'),
                                 {'attrib-starts': [],
                                  'code-line': '\r\n',
                                  'first-line': 230L,
                                  'folded-linenos': [],
                                  'sel-line': 336L,
                                  'sel-line-start': 14739L,
                                  'selection_end': 14739L,
                                  'selection_start': 14739L,
                                  'zoom': 0L})],
          'has-focus': True,
          'locked': False},
         [loc('plot.py'),
          loc('README.md'),
          loc('word2vec.py')]),
        ({'bookmarks': ([[loc('../hon/generate.py'),
                          {'attrib-starts': [],
                           'code-line': '#   Copyright (C) 2021 Greenweaves '\
        'Software Limited\r\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 0L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1621457514.348],
                         [loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/optim/optimizer.py'),
                          {'attrib-starts': [],
                           'code-line': 'from collections import defaultdict'\
        '\r\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 0L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1621457515.42],
                         [loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/pandas/core/indexes/base.py'),
                          {'attrib-starts': [('Index|0|',
        149),
        ('Index|0|.get_loc|0|',
         3035)],
                           'code-line': '                raise KeyError(key)'\
        ' from err\r\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 3081L,
                           'sel-line-start': 100141L,
                           'selection_end': 100141L,
                           'selection_start': 100141L,
                           'zoom': 0L},
                          1621457516.59],
                         [loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/pandas/core/frame.py'),
                          {'attrib-starts': [],
                           'code-line': '"""\r\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 0L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1621457517.326],
                         [loc('../hon/spike6.py'),
                          {'attrib-starts': [],
                           'code-line': '    for text in reader:\r\n',
                           'first-line': 11L,
                           'folded-linenos': [],
                           'sel-line': 31L,
                           'sel-line-start': 1694L,
                           'selection_end': 1717L,
                           'selection_start': 1717L,
                           'zoom': 0L},
                          1622078761.251],
                         [loc('../hon/spike5.py'),
                          {'attrib-starts': [],
                           'code-line': '#   Copyright (C) 2021 Greenweaves '\
        'Software Limited\r\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 0L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1622487309.988],
                         [loc('../hon/spike4.py'),
                          {'attrib-starts': [],
                           'code-line': '#   Copyright (C) 2021 Greenweaves '\
        'Software Limited\r\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 0L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1622487313.895],
                         [loc('../hon/spike3.py'),
                          {'attrib-starts': [],
                           'code-line': 'from matplotlib.pyplot     import f'\
        'igure, title, xlabel, ylabel, scatter, legend, colorbar\r\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 0L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1622487315.249],
                         [loc('../hon/spike2.py'),
                          {'attrib-starts': [],
                           'code-line': '\r\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 0L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1622487316.263],
                         [loc('../hon/spike1.py'),
                          {'attrib-starts': [],
                           'code-line': '#   Copyright (C) 2021 Greenweaves '\
        'Software Limited\r\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 0L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1622487317.073],
                         [loc('../hon/parse.py'),
                          {'attrib-starts': [],
                           'code-line': 'from matplotlib.pyplot import figur'\
        'e, title, xlabel, ylabel, scatter, legend, colorbar, plot\r\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 0L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1622512694.045],
                         [loc('../../../Program Files (x86)/Wing Personal 7.2/doc/TOC'),
                          {'displayed-index': -1,
                           'viewer-state': {'history': [-1,
        0],
        'history-pos': 0,
        'index': -1,
        'top': 0,
        'top-left-pos': 1}},
                          1623045937.531],
                         [loc('README.md'),
                          {'attrib-starts': [],
                           'code-line': '# NLP\r\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 0L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1623117615.69],
                         [loc('nano-corpus.txt'),
                          {'attrib-starts': [],
                           'code-line': 'He is a king.\r\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 0L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1623193133.233],
                         [loc('word2vec.py'),
                          {'attrib-starts': [],
                           'code-line': '#    Copyright (C) 2021 Simon A. Cr'\
        'ase\r\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 0L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1623193135.246],
                         [loc('../AppData/Local/Programs/Python/Python38/Lib/encodings/cp1252.py'),
                          {'attrib-starts': [],
                           'code-line': "\"\"\" Python Character Mapping Cod"\
        "ec cp1252 generated from 'MAPPINGS/VENDORS/MICSFT/WINDOWS/CP1252.TX"\
        "T' with gencodec.py.\r\n",
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 0L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1623453958.675],
                         [loc('tokenizer.py'),
                          {'attrib-starts': [],
                           'code-line': '#    Copyright (C) 2021 Simon A. Cr'\
        'ase\r\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 0L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1623453959.634],
                         [loc('chapter1.txt'),
                          {'attrib-starts': [],
                           'code-line': 'In my younger and more vulnerable y'\
        'ears my father gave me some advice\r\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 0L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1623453960.746],
                         [loc('README.md'),
                          {'attrib-starts': [],
                           'code-line': '# NLP\r\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 0L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1623453961.866],
                         [loc('64317-0.txt'),
                          {'attrib-starts': [],
                           'code-line': 'The Project Gutenberg eBook of The '\
        'Great Gatsby, by F. Scott Fitzgerald\r\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 0L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1623453968.468]],
                        20),
          'current-loc': loc('word2vec.py'),
          'editor-state-list': [(loc('plot.py'),
                                 {}),
                                (loc('README.md'),
                                 {'attrib-starts': [],
                                  'code-line': '# NLP\r\n',
                                  'first-line': 0L,
                                  'folded-linenos': [],
                                  'sel-line': 0L,
                                  'sel-line-start': 0L,
                                  'selection_end': 0L,
                                  'selection_start': 0L,
                                  'zoom': 0L}),
                                (loc('word2vec.py'),
                                 {'attrib-starts': [],
                                  'code-line': '#    Copyright (C) 2021 Simo'\
        'n A. Crase\r\n',
                                  'first-line': 0L,
                                  'folded-linenos': [],
                                  'sel-line': 0L,
                                  'sel-line-start': 0L,
                                  'selection_end': 0L,
                                  'selection_start': 0L,
                                  'zoom': 0L})],
          'has-focus': False,
          'locked': False},
         [loc('plot.py'),
          loc('README.md'),
          loc('word2vec.py')])),
                               'open_files': [u'README.md',
        u'word2vec.py',
        u'plot.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.5},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((1,
                           1),
                          1623541468.527),
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {},
                 'splits': 1,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    2),
                                   1623526753.175),
                 'user_data': {}},
        'window-alloc': (147,
                         108,
                         1702,
                         907)}]}
guimgr.recent-documents = [loc('plot.py'),
                           loc('word2vec.py'),
                           loc('README.md')]
guimgr.visual-state = {loc('../AppData/Local/Programs/Python/Python38/Lib/encodings/cp1252.py'): {'a'\
        'ttrib-starts': [('IncrementalDecoder|0|',
                          20),
                         ('IncrementalDecoder|0|.decode|0|',
                          21)],
        'code-line': '        return codecs.charmap_decode(input,self.errors'\
                     ',decoding_table)[0]\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 22L,
        'sel-line-start': 696L,
        'selection_end': 696L,
        'selection_start': 696L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/spacy/util.py'): {'a'\
        'ttrib-starts': [('load_model|0|',
                          300)],
        'code-line': '    raise IOError(Errors.E050.format(name=name))\r\n',
        'first-line': 308L,
        'folded-linenos': [],
        'sel-line': 330L,
        'sel-line-start': 12888L,
        'selection_end': 12888L,
        'selection_start': 12888L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/autograd/__init__.py'): {'a'\
        'ttrib-starts': [('backward|0|',
                          44)],
        'code-line': '    Variable._execution_engine.run_backward(\r\n',
        'first-line': 84L,
        'folded-linenos': [],
        'sel-line': 97L,
        'sel-line-start': 4634L,
        'selection_end': 4634L,
        'selection_start': 4634L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/nn/functional.py'): {'a'\
        'ttrib-starts': [('nll_loss|0|',
                          2054)],
        'code-line': "        raise ValueError('Expected input batch_size ({"\
                     "}) to match target batch_size ({}).'\r\n",
        'first-line': 2092L,
        'folded-linenos': [],
        'sel-line': 2111L,
        'sel-line-start': 93681L,
        'selection_end': 93681L,
        'selection_start': 93681L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/serialization.py'): {'a'\
        'ttrib-starts': [('_open_file|0|',
                          212),
                         ('_open_file|0|.__init__|0|',
                          213)],
        'code-line': '        super(_open_file, self).__init__(open(name, mo'\
                     'de))\r\n',
        'first-line': 192L,
        'folded-linenos': [],
        'sel-line': 214L,
        'sel-line-start': 6838L,
        'selection_end': 6838L,
        'selection_start': 6838L,
        'zoom': 0L},
                       loc('64317-0.txt'): {'attrib-starts': [],
        'code-line': 'The Project Gutenberg eBook of The Great Gatsby, by F.'\
                     ' Scott Fitzgerald\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('README.md'): {'attrib-starts': [],
        'code-line': '# NLP\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('chapter1.txt'): {'attrib-starts': [],
        'code-line': 'In my younger and more vulnerable years my father gave'\
                     ' me some advice\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('nano-corpus.txt'): {'attrib-starts': [],
        'code-line': 'He is a king.\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('spacy-vectors.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('tokenizer.py'): {'attrib-starts': [],
        'code-line': '#    Copyright (C) 2021 Simon A. Crase\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L}}
proj.build-cmd = {None: ('default',
                         None)}
proj.env-vars = {None: ('default',
                        [u''])}
proj.pyexec = {None: ('custom',
                      u'/Users/Weka/AppData/Local/Programs/Python/Python38/python')}
search.replace-history = [u'create-1hot-vector',
                          u'word_indices',
                          u'.word_indices']
search.search-history = [u'Load',
                         u'get_input_layer',
                         u'indices',
                         u'zeros']

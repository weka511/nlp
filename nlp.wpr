#!wing
#!version=9.0
##################################################################
# Wing project file                                              #
##################################################################
[project attributes]
proj.file-list = [loc('bt.py'),
                  loc('plot.py'),
                  loc('README.md'),
                  loc('rnn2.py'),
                  loc('rnn.py'),
                  loc('seq2seq.py'),
                  loc('skipgram.py'),
                  loc('template-test.py'),
                  loc('template.py'),
                  loc('tfidf-harness.py'),
                  loc('tfidf.py'),
                  loc('tokenizer.py'),
                  loc('word2vec2.py'),
                  loc('word2vec.py')]
proj.file-type = 'normal'
proj.launch-config = {loc('plot.py'): ('project',
                                       ('gatsby[0-9].pt --show --chain',
        '')),
                      loc('rnn3.py'): ('project',
                                       ('train --output simple --decoder simple --show',
        '')),
                      loc('seq2seq.py'): ('project',
        ('evaluate  --load attention',
         '')),
                      loc('tf-idf-exec.py'): ('project',
        ('*.txt',
         '')),
                      loc('tf-idf.py'): ('project',
        ('*.txt',
         '')),
                      loc('tfidf-harness.py'): ('project',
        ('gatsby*.txt --log',
         '')),
                      loc('word2vec.py'): ('project',
        ('train --corpus nano-corpus.txt --show',
         '')),
                      loc('word2vec2.py'): ('project',
        ('train -N 2 -m 12 -d 8 --show',
         ''))}
[user attributes]
debug.recent-run-args = {loc('plot.py'): ['gatsby[0-9].pt --show --chain',
        'gatsby2.pt --show --chain',
        'gatsby*.pt --show --chain',
        'gatsby*.pt --show',
        'gatsby[0-9]*.pt --show',
        'gatsby2.pt gatsby3.pt --show',
        'gatsby2.pt gatasby3.pt --show',
        'gatsby2.pt --show',
        'gatsby1.pt --show',
        'foo bar baz --show',
        'foo bar baz'],
                         loc('rnn3.py'): ['train --output simple --decoder simple --show',
        'train --output simple --decoder --simple --show',
        'evaluate --load persist --show',
        'evaluate --load foo',
        'train --output foo --N 1000 ',
        'evaluate',
        'train --N 1000 --printf 10 --frequency 10 --output foo --show',
        '--help',
        '--N 750 --printf 50 --frequency 5 --output temp --show',
        '--N 750 --printf 50 --frequency -5 --output temp --show',
        '--N 750 --printf 50 --frequency -5',
        '--N 750 --printf 50 --frequency -5  --decoder simple',
        '--N 750 --printf 50 --frequency -5  decoder simple',
        '--N 750 --Frequency 50 --Plot -5'],
                         loc('seq2seq.py'): ['evaluate  --load attention',
        'evaluate --decoder attention --load foo',
        'train --decoder attention --output bar',
        'train --decoder simple --output foo',
        'train --decoder attention --output foo',
        '--decoder attention',
        '--help'],
                         loc('tf-idf-exec.py'): ['*.txt'],
                         loc('tf-idf.py'): ['*.txt',
        'gatsby.txt erewhon.txt'],
                         loc('tfidf-harness.py'): ['gatsby*.txt --log',
        'gatsby*.txt'],
                         loc('word2vec.py'): ['train --corpus nano-corpus.txt --show',
        'train --corpus nano-corpus --show',
        'test --saved foo',
        'test --saved mply000239',
        'test --saved bar',
        'train --corpus nano-corpus.txt  --freq 100 --output stochastic --show --embedding 5 --N 200  --optimizer stochastic',
        'train --corpus nano-corpus.txt  --freq 100 --output stochastic --show --embedding 5 --N 20000  --optimizer stochastic',
        'train --corpus nano-corpus.txt  --freq 100 --output gradient --show --embedding 5 --N 5000  --optimizer gradient',
        'train --corpus nano-corpus.txt  --freq 100 --output alpha --show --embedding 5 --N 5000  --optimizer stochastic --minibatch 25',
        'train --corpus nano-corpus.txt  --freq 100 --output alpha --show --embedding 5 --N 5000  --optimzer stochastic --minibatch 25',
        'train --corpus nano-corpus.txt  --freq 100 --output alpha --show --embedding 5 --N 5000  ',
        'train --corpus nano-corpus.txt  --freq 100 --output alpha --show --embedding 5 --N 50000  ',
        'train --corpus nano-corpus.txt  --freq 100 --output alpha --show --embedding 5 --N 50000  --alpha 0.5',
        'train --corpus nano-corpus.txt  --freq 100 --output alpha --show --embedding 5 --N 2000  --alpha 0.5',
        'train --corpus nano-corpus.txt  --freq 100 --output nano --show --embedding 5 --N 50000',
        'train --corpus nano-corpus.txt  --freq 100 --output nano --show --embedding 5',
        'train --corpus nano-corpus.txt  --freq 100 --output nano --shown --embedding 5',
        'train --corpus nano-corpus.txt  --freq 100 --output nano --shown--embedding 5',
        'train --corpus nano-corpus.txt  --freq 100 --output nano --show',
        'train --corpus nano-corpus.txt --N 100 --freq 10 --output nano --show',
        'train --corpus nano-corpus.txt --N 10 --freq 10 --output nano --show',
        'train --corpus nano.txt --N 100 --freq 10 --output nano --show',
        'train --corpus nano --N 100 --freq 10 --output nano --show',
        'test --saved nano',
        'train --corpus nano-corpus.txt --output nano  --embedding 5 --frequency 100',
        'train --corpus nano-corpus.txt --output nano  --embedding 5',
        'train --corpus nano-corpus.txt --output nano  --e,bedding 5',
        'train --corpus nano-corpus.txt --output nano',
        '--help',
        'test --saved chk000082'],
                         loc('word2vec2.py'): ['train -N 2 -m 12 -d 8 --show',
        'train -N 2 -m 12 -d 8',
        'train',
        'create  gatsby*.txt ',
        'create',
        'create gatsby1.txt ',
        'gatsby1.txt --action train',
        'gatsby1.txt --action create',
        'gatsby*.txt --action train',
        'gatsby*.txt --action create',
        'gatsby1.txt --create',
        'gatsby1.txt --help',
        'gatsby1.txt']}
edit.file-encoding = {loc('chapter1.txt'): 'utf_8'}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'z6bzoexBsToEcnlYFrysBq19zfXe9458',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [2],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.25,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [],
                                 'selected-nodes': [],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('../AppData/Local/Programs/Python/Python311/Lib/collections/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Local/Programs/Python/Python311/Lib/collections/abc.py'),
                      '')]},
        loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/numpy/testing/_private/utils.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/numpy/testing/_private/utils.py'),
                      'assert_')]},
        loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/sklearn/preprocessing/_data.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/sklearn/preprocessing/_data.py'),
                             '__all__')]],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/sklearn/preprocessing/_data.py'),
                      'add_dummy_feature')]},
        loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/spacy/language.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/spacy/language.py'),
                      'BaseDefaults')]},
        loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/torch/_C/_VariableFunctions.pyi'): {'expanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/torch/_C/_VariableFunctions.pyi'),
                             '__xor__')]],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/torch/_C/_VariableFunctions.pyi'),
                      'abs')]},
        loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/torch/nn/functional.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/torch/nn/functional.pyi'),
                      'adaptive_avg_pool1d')]},
        loc('../AppData/Local/Programs/Python/Python311/Lib/unittest/case.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python311/Lib/unittest/case.py'),
                      'addModuleCleanup')]},
        loc('README.md'): {'expanded-nodes': [],
                           'selected-nodes': [],
                           'top-node': None},
        loc('bt.py'): {'expanded-nodes': [],
                       'selected-nodes': [],
                       'top-node': [('generic attribute',
                                     loc('bt.py'),
                                     'Betas')]},
        loc('plot.py'): {'expanded-nodes': [],
                         'selected-nodes': [],
                         'top-node': [('generic attribute',
                                       loc('plot.py'),
                                       'args')]},
        loc('rnn.py'): {'expanded-nodes': [],
                        'selected-nodes': [],
                        'top-node': [('generic attribute',
                                      loc('rnn.py'),
                                      'all_losses')]},
        loc('rnn2.py'): {'expanded-nodes': [],
                         'selected-nodes': [],
                         'top-node': [('generic attribute',
                                       loc('rnn2.py'),
                                       'all_losses')]},
        loc('seq2seq.py'): {'expanded-nodes': [],
                            'selected-nodes': [],
                            'top-node': [('generic attribute',
        loc('seq2seq.py'),
        'args')]},
        loc('skipgram.py'): {'expanded-nodes': [],
                             'selected-nodes': [],
                             'top-node': [('class def',
        loc('skipgram.py'),
        'ExampleBuilder')]},
        loc('template-test.py'): {'expanded-nodes': [],
                                  'selected-nodes': [],
                                  'top-node': [('class def',
        loc('template-test.py'),
        'TestSummat')]},
        loc('template.py'): {'expanded-nodes': [],
                             'selected-nodes': [],
                             'top-node': [('generic attribute',
        loc('template.py'),
        'args')]},
        loc('tf-idf.py'): {'expanded-nodes': [],
                           'selected-nodes': [None],
                           'top-node': [('generic attribute',
        loc('tf-idf.py'),
        'args')]},
        loc('tfidf-harness.py'): {'expanded-nodes': [],
                                  'selected-nodes': [],
                                  'top-node': [('generic attribute',
        loc('tfidf-harness.py'),
        'args')]},
        loc('tfidf.py'): {'expanded-nodes': [],
                          'selected-nodes': [],
                          'top-node': [('function def',
        loc('tfidf.py'),
        'count_words')]},
        loc('tokenizer.py'): {'expanded-nodes': [],
                              'selected-nodes': [[('generic attribute',
        loc('tokenizer.py'),
        'sentence')]],
                              'top-node': [('function def',
        loc('tokenizer.py'),
        'extract_sentences')]},
        loc('word2vec.py'): {'expanded-nodes': [],
                             'selected-nodes': [[('function def',
        loc('word2vec.py'),
        'get_similarity')]],
                             'top-node': [('generic attribute',
        loc('word2vec.py'),
        'args')]},
        loc('word2vec2.py'): {'expanded-nodes': [],
                              'selected-nodes': [],
                              'top-node': [('generic attribute',
        loc('word2vec2.py'),
        'args')]}},
                                'browse_mode': 'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {'Derived Classes': False,
        'Imported': False,
        'Modules': True}}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [1,
                          0],
        'notebook_display': 'normal',
        'notebook_percent': 0.30000000000000004,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': 'eta',
                                       'fReverse': False,
                                       'fSearchText': 'epsilon',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': True}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 0,
                       'folded-linenos': [],
                       'history': {},
                       'launch-id': None,
                       'sel-line': 2,
                       'sel-line-start': 159,
                       'selection_end': 159,
                       'selection_start': 159,
                       'zoom': 0}),
                     ('messages',
                      'wide',
                      2,
                      {'current-domain': 0}),
                     ('os-command',
                      'wide',
                      1,
                      {'last-percent': 0.8,
                       'toolbox-percent': 1.0,
                       'toolbox-tree-sel': ''})],
        'primary_view_state': {'editor_states': ('horizontal',
        0.9972027972027973,
        ({'bookmarks': ([[loc('skipgram.py'),
                          {'attrib-starts': [('StochasticGradientDescent|0|',
        207),
        ('StochasticGradientDescent|0|.__init__|0|',
         211)],
                           'code-line': '        self.eta_tau = final_ratio * self.epsilon0\r\n',
                           'first-line': 200,
                           'folded-linenos': [],
                           'sel-line': 216,
                           'sel-line-start': 7355,
                           'selection_end': 7371,
                           'selection_start': 7368,
                           'zoom': 0},
                          1686546884.207725],
                         [loc('skipgram.py'),
                          {'attrib-starts': [('StochasticGradientDescent|0|',
        207),
        ('StochasticGradientDescent|0|.__init__|0|',
         211)],
                           'code-line': '        self.eta_tau = final_ratio * self.eta0\r\n',
                           'first-line': 200,
                           'folded-linenos': [],
                           'sel-line': 216,
                           'sel-line-start': 7355,
                           'selection_end': 7400,
                           'selection_start': 7397,
                           'zoom': 0},
                          1686546884.802435],
                         [loc('skipgram.py'),
                          {'attrib-starts': [('StochasticGradientDescent|0|',
        207),
        ('StochasticGradientDescent|0|.optimize|0|',
         219)],
                           'code-line': '                eta = (1.0 - alpha)*self.eta0 + alpha*self.eta_tau\r\n',
                           'first-line': 207,
                           'folded-linenos': [],
                           'sel-line': 224,
                           'sel-line-start': 7623,
                           'selection_end': 7646,
                           'selection_start': 7639,
                           'zoom': 0},
                          1686546897.8658812],
                         [loc('word2vec2.py'),
                          {'attrib-starts': [],
                           'code-line': '            optimizer = Optimizer.create(model,data,loss_calculator,rng=rng)\r\n',
                           'first-line': 74,
                           'folded-linenos': [],
                           'sel-line': 91,
                           'sel-line-start': 4226,
                           'selection_end': 4266,
                           'selection_start': 4260,
                           'zoom': 0},
                          1686547016.6076],
                         [loc('skipgram.py'),
                          {'attrib-starts': [('Optimizer|0|',
        184),
        ('Optimizer|0|.create|0|',
         189)],
                           'code-line': '        return StochasticGradientDescent(model,data,loss_calculator,m=m, N=N, eta0=eta0, final_ratio=final_ratio,tau=tau,rng=rng)\r\n',
                           'first-line': 181,
                           'folded-linenos': [],
                           'sel-line': 190,
                           'sel-line-start': 6519,
                           'selection_end': 6640,
                           'selection_start': 6640,
                           'zoom': 0},
                          1686547132.5503576],
                         [loc('word2vec2.py'),
                          {'attrib-starts': [],
                           'code-line': '            optimizer = Optimizer.create(model,data,loss_calculator,rng=rng)\r\n',
                           'first-line': 74,
                           'folded-linenos': [],
                           'sel-line': 91,
                           'sel-line-start': 4226,
                           'selection_end': 4266,
                           'selection_start': 4260,
                           'zoom': 0},
                          1686547153.566453],
                         [loc('skipgram.py'),
                          {'attrib-starts': [('Optimizer|0|',
        184)],
                           'code-line': '    def create(model,data,loss_calculator,m = 16,N = 2048,eta0 = 0.05,  final_ratio=0.01, tau = 512,rng=default_rng()):\r\n',
                           'first-line': 178,
                           'folded-linenos': [],
                           'sel-line': 189,
                           'sel-line-start': 6398,
                           'selection_end': 6497,
                           'selection_start': 6440,
                           'zoom': 0},
                          1686547162.3763762],
                         [loc('word2vec2.py'),
                          {'attrib-starts': [],
                           'code-line': '            optimizer = Optimizer.create(model,data,loss_calculator,\r\n',
                           'first-line': 73,
                           'folded-linenos': [],
                           'sel-line': 91,
                           'sel-line-start': 4226,
                           'selection_end': 4266,
                           'selection_start': 4260,
                           'zoom': 0},
                          1686547259.6539884],
                         [loc('skipgram.py'),
                          {'attrib-starts': [('Optimizer|0|',
        184)],
                           'code-line': '    def create(model,data,loss_calculator,m = 16,N = 2048,eta0 = 0.05,  final_ratio=0.01, tau = 512,rng=default_rng()):\r\n',
                           'first-line': 193,
                           'folded-linenos': [],
                           'sel-line': 189,
                           'sel-line-start': 6398,
                           'selection_end': 6412,
                           'selection_start': 6406,
                           'zoom': 0},
                          1686547273.2806785],
                         [loc('word2vec2.py'),
                          {'attrib-starts': [],
                           'code-line': '                                         m = args.minibatch,N = args.N,eta0 = args.eta,  final_ratio=args.ratio, tau = args.tau, rng=rng)\r\n',
                           'first-line': 72,
                           'folded-linenos': [],
                           'sel-line': 92,
                           'sel-line-start': 4296,
                           'selection_end': 4382,
                           'selection_start': 4382,
                           'zoom': 0},
                          1686547353.5099754],
                         [loc('skipgram.py'),
                          {'attrib-starts': [('StochasticGradientDescent|0|',
        207),
        ('StochasticGradientDescent|0|.optimize|0|',
         220)],
                           'code-line': '            self.log.append(total_loss)\r\n',
                           'first-line': 208,
                           'folded-linenos': [],
                           'sel-line': 229,
                           'sel-line-start': 8010,
                           'selection_end': 8048,
                           'selection_start': 8048,
                           'zoom': 0},
                          1686547428.268106],
                         [loc('word2vec2.py'),
                          {'attrib-starts': [],
                           'code-line': "    parser.add_argument('--width', '-n', type=int, default=64, help='Minibatch size')\r\n",
                           'first-line': 61,
                           'folded-linenos': [],
                           'sel-line': 67,
                           'sel-line-start': 2771,
                           'selection_end': 2809,
                           'selection_start': 2809,
                           'zoom': 0},
                          1686547501.7979786],
                         [loc('skipgram.py'),
                          {'attrib-starts': [('Word2Vec|0|',
        133)],
                           'code-line': '    Used to store word2vec weights\r\n',
                           'first-line': 122,
                           'folded-linenos': [],
                           'sel-line': 135,
                           'sel-line-start': 4495,
                           'selection_end': 4511,
                           'selection_start': 4511,
                           'zoom': 0},
                          1686547503.7186246],
                         [loc('word2vec2.py'),
                          {'attrib-starts': [],
                           'code-line': "    parser.add_argument('--show', default=False, action='store_true', help='display plots')\r\n",
                           'first-line': 61,
                           'folded-linenos': [],
                           'sel-line': 72,
                           'sel-line-start': 3304,
                           'selection_end': 3393,
                           'selection_start': 3388,
                           'zoom': 0},
                          1686547643.1798127],
                         [loc('word2vec2.py'),
                          {'attrib-starts': [],
                           'code-line': 'from matplotlib.pyplot import figure, show\r\n',
                           'first-line': 12,
                           'folded-linenos': [],
                           'sel-line': 25,
                           'sel-line-start': 930,
                           'selection_end': 972,
                           'selection_start': 972,
                           'zoom': 0},
                          1686547681.934125],
                         [loc('word2vec2.py'),
                          {'attrib-starts': [],
                           'code-line': '            fig = figure()\r\n',
                           'first-line': 82,
                           'folded-linenos': [],
                           'sel-line': 98,
                           'sel-line-start': 4710,
                           'selection_end': 4736,
                           'selection_start': 4736,
                           'zoom': 0},
                          1686547775.787997],
                         [loc('word2vec2.py'),
                          {'attrib-starts': [],
                           'code-line': '            docnames = [doc for pattern in args.docnames for doc in glob(pattern)]\r\n',
                           'first-line': 58,
                           'folded-linenos': [],
                           'sel-line': 78,
                           'sel-line-start': 3555,
                           'selection_end': 3637,
                           'selection_start': 3637,
                           'zoom': 0},
                          1686547911.3998256],
                         [loc('word2vec2.py'),
                          {'attrib-starts': [],
                           'code-line': "    parser.add_argument('--plot', default='word2vec2', help='Plot file name')\r\n",
                           'first-line': 65,
                           'folded-linenos': [],
                           'sel-line': 74,
                           'sel-line-start': 3441,
                           'selection_end': 3518,
                           'selection_start': 3518,
                           'zoom': 0},
                          1686547989.2891555],
                         [loc('word2vec2.py'),
                          {'attrib-starts': [],
                           'code-line': "            ax.ticklabel_format(style='plain',axis='x',useOffset=False)\r\n",
                           'first-line': 86,
                           'folded-linenos': [],
                           'sel-line': 102,
                           'sel-line-start': 4937,
                           'selection_end': 4952,
                           'selection_start': 4952,
                           'zoom': 0},
                          1686548804.229791],
                         [loc('skipgram.py'),
                          {'attrib-starts': [],
                           'code-line': 'class Word2Vec:\r\n',
                           'first-line': 122,
                           'folded-linenos': [],
                           'sel-line': 133,
                           'sel-line-start': 4469,
                           'selection_end': 4483,
                           'selection_start': 4475,
                           'zoom': 0},
                          1686548817.3649244]],
                        20),
          'current-loc': loc('skipgram.py'),
          'editor-state-list': [(loc('skipgram.py'),
                                 {'attrib-starts': [],
                                  'code-line': 'class Word2Vec:\r\n',
                                  'first-line': 304,
                                  'folded-linenos': [],
                                  'sel-line': 133,
                                  'sel-line-start': 4469,
                                  'selection_end': 4483,
                                  'selection_start': 4475,
                                  'zoom': 0}),
                                (loc('word2vec2.py'),
                                 {'attrib-starts': [],
                                  'code-line': "            ax.ticklabel_format(style='plain',axis='x',useOffset=False)\r\n",
                                  'first-line': 86,
                                  'folded-linenos': [],
                                  'sel-line': 102,
                                  'sel-line-start': 4937,
                                  'selection_end': 4952,
                                  'selection_start': 4952,
                                  'zoom': 0})],
          'has-focus': True,
          'locked': False},
         [loc('skipgram.py'),
          loc('word2vec2.py')]),
        ({'bookmarks': ([[loc('../../../Program Files/Wing Personal 9/doc/TOC'),
                          {'displayed-index': None,
                           'viewer-state': {'history': [-1,
        0],
        'history-pos': 0,
        'index': -1,
        'top': 0,
        'top-left-pos': 1}},
                          1683402762.8001246],
                         [loc('../../../Program Files/Wing Personal 9/doc/TOC'),
                          {'displayed-index': -1,
                           'viewer-state': {'history': [-1,
        0],
        'history-pos': 0,
        'index': -1,
        'top': 0,
        'top-left-pos': 0}},
                          1683402907.6483195],
                         [loc('word2vec.py'),
                          {'attrib-starts': [],
                           'code-line': '#!/usr/bin/env python\r\n',
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 0,
                           'sel-line-start': 0,
                           'selection_end': 762,
                           'selection_start': 0,
                           'zoom': 0},
                          1686097783.807234],
                         [loc('tokenizer.py'),
                          {'attrib-starts': [('read_text|0|',
        22)],
                           'code-line': "        with open(file_name,encoding='utf-8') as text_file:\r\n",
                           'first-line': 11,
                           'folded-linenos': [],
                           'sel-line': 34,
                           'sel-line-start': 1210,
                           'selection_end': 1210,
                           'selection_start': 1210,
                           'zoom': 0},
                          1686097784.8952396],
                         [loc('tfidf.py'),
                          {'attrib-starts': [],
                           'code-line': '#!/usr/bin/env python\r\n',
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 0,
                           'sel-line-start': 0,
                           'selection_end': 0,
                           'selection_start': 0,
                           'zoom': 0},
                          1686097785.8295815],
                         [loc('word2vec.py'),
                          {'attrib-starts': [],
                           'code-line': '#!/usr/bin/env python\r\n',
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 0,
                           'sel-line-start': 0,
                           'selection_end': 762,
                           'selection_start': 0,
                           'zoom': 0},
                          1686110355.8228083],
                         [loc('skipgram.py'),
                          {'attrib-starts': [],
                           'code-line': 'import numpy as np\r\n',
                           'first-line': 12,
                           'folded-linenos': [],
                           'sel-line': 22,
                           'sel-line-start': 863,
                           'selection_end': 881,
                           'selection_start': 881,
                           'zoom': 0},
                          1686177623.6113675],
                         [loc('../AppData/Local/Programs/Python/Python311/Lib/unittest/case.py'),
                          {'attrib-starts': [('TestCase|0|',
        343),
        ('TestCase|0|._baseAssertEqual|0|',
         860)],
                           'code-line': '            raise self.failureException(msg)\r\n',
                           'first-line': 853,
                           'folded-linenos': [],
                           'sel-line': 865,
                           'sel-line-start': 33596,
                           'selection_end': 33596,
                           'selection_start': 33596,
                           'zoom': 0},
                          1686177624.2979283],
                         [loc('tfidf.py'),
                          {'attrib-starts': [],
                           'code-line': '#!/usr/bin/env python\r\n',
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 0,
                           'sel-line-start': 0,
                           'selection_end': 0,
                           'selection_start': 0,
                           'zoom': 0},
                          1686177625.0159385],
                         [loc('template-test.py'),
                          {'attrib-starts': [],
                           'code-line': '#!/usr/bin/env python\r\n',
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 0,
                           'sel-line-start': 0,
                           'selection_end': 0,
                           'selection_start': 0,
                           'zoom': 0},
                          1686177625.849813]],
                        10),
          'current-loc': loc('skipgram.py'),
          'editor-state-list': [(loc('skipgram.py'),
                                 {'attrib-starts': [],
                                  'code-line': 'import numpy as np\r\n',
                                  'first-line': 12,
                                  'folded-linenos': [],
                                  'sel-line': 22,
                                  'sel-line-start': 903,
                                  'selection_end': 921,
                                  'selection_start': 921,
                                  'zoom': 0}),
                                (loc('word2vec2.py'),
                                 {'attrib-starts': [],
                                  'code-line': "'''Skipgrams as described in Chapter 6 of Jurafsky & Martin'''\r\n",
                                  'first-line': 13,
                                  'folded-linenos': [],
                                  'sel-line': 18,
                                  'sel-line-start': 726,
                                  'selection_end': 753,
                                  'selection_start': 753,
                                  'zoom': 0})],
          'has-focus': False,
          'locked': False},
         [loc('skipgram.py'),
          loc('word2vec2.py')])),
                               'open_files': ['word2vec2.py',
        'skipgram.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.5},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((1,
                           0),
                          1686548771.5514925),
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {},
                 'splits': 1,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    2),
                                   1686538311.763116),
                 'user_data': {}},
        'window-alloc': (18,
                         16,
                         1356,
                         734)}]}
guimgr.recent-documents = [loc('skipgram.py'),
                           loc('word2vec2.py')]
guimgr.visual-state = {loc('../../../Program Files (x86)/Wing Personal 7.2/resources/builtin-pi-files/__os__/win32/3.8/re.pi'): {'attrib-starts': [],
        'code-line': '# coding: utf-8\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('../../../Program Files (x86)/Wing Personal 7.2/resources/builtin-pi-files/__os__/win32/3.8/unicodedata.pi'): {'attrib-starts': [('category|0|',
        117)],
        'code-line': 'def category(chr):\n',
        'first-line': 103,
        'folded-linenos': [],
        'sel-line': 117,
        'sel-line-start': 3923,
        'selection_end': 3935,
        'selection_start': 3927,
        'zoom': 0},
                       loc('../../../Program Files (x86)/Wing Personal 7.2/resources/typeshed/stdlib/3/os/__init__.pyi'): {'attrib-starts': [('remove|1|',
        439)],
        'code-line': '    def remove(path: _PathType) -> None: ...\n',
        'first-line': 425,
        'folded-linenos': [],
        'sel-line': 439,
        'sel-line-start': 16110,
        'selection_end': 16124,
        'selection_start': 16118,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python311/Lib/argparse.py'): {'attrib-starts': [('_ActionsContainer|0|',
        1327),
        ('_ActionsContainer|0|._get_positional_kwargs|0|',
         1536)],
        'code-line': '            raise TypeError(msg)\r\n',
        'first-line': 1520,
        'folded-linenos': [],
        'sel-line': 1540,
        'sel-line-start': 56236,
        'selection_end': 56236,
        'selection_start': 56236,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python311/Lib/collections/__init__.py'): {'attrib-starts': [('Counter|0|',
        533),
        ('Counter|0|.update|0|',
         657)],
        'code-line': '                _count_elements(self, iterable)\r\n',
        'first-line': 667,
        'folded-linenos': [],
        'sel-line': 687,
        'sel-line-start': 25316,
        'selection_end': 25316,
        'selection_start': 25316,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python311/Lib/encodings/cp1252.py'): {'attrib-starts': [('IncrementalDecoder|0|',
        20),
        ('IncrementalDecoder|0|.decode|0|',
         21)],
        'code-line': '        return codecs.charmap_decode(input,self.errors,decoding_table)[0]\r\n',
        'first-line': 9,
        'folded-linenos': [],
        'sel-line': 22,
        'sel-line-start': 696,
        'selection_end': 696,
        'selection_start': 696,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/matplotlib/figure.py'): {'attrib-starts': [('FigureBase|0|',
        157)],
        'code-line': '    def subplots(self, nrows=1, ncols=1, *, sharex=False, sharey=False,\r\n',
        'first-line': 772,
        'folded-linenos': [],
        'sel-line': 761,
        'sel-line-start': 28535,
        'selection_end': 28551,
        'selection_start': 28543,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/numpy/__init__.py'): {'attrib-starts': [('__getattr__|0|',
        273)],
        'code-line': '        raise AttributeError("module {!r} has no attribute "\r\n',
        'first-line': 290,
        'folded-linenos': [],
        'sel-line': 310,
        'sel-line-start': 11179,
        'selection_end': 11179,
        'selection_start': 11179,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/numpy/core/_methods.py'): {'attrib-starts': [('_amax|0|',
        37)],
        'code-line': '    return umr_maximum(a, axis, None, out, keepdims, initial, where)\r\n',
        'first-line': 19,
        'folded-linenos': [],
        'sel-line': 39,
        'sel-line-start': 1298,
        'selection_end': 1298,
        'selection_start': 1298,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/numpy/core/fromnumeric.py'): {'attrib-starts': [],
        'code-line': '"""Module containing non-deprecated functions borrowed from Numeric.\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/numpy/core/multiarray.py'): {'attrib-starts': [],
        'code-line': 'def where(condition, x=None, y=None):\r\n',
        'first-line': 349,
        'folded-linenos': [],
        'sel-line': 341,
        'sel-line-start': 12125,
        'selection_end': 12134,
        'selection_start': 12129,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/numpy/core/multiarray.pyi'): {'attrib-starts': [],
        'code-line': 'def empty(\r\n',
        'first-line': 236,
        'folded-linenos': [],
        'sel-line': 249,
        'sel-line-start': 5126,
        'selection_end': 5135,
        'selection_start': 5130,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/numpy/testing/_private/utils.py'): {'attrib-starts': [('assert_array_compare|0|',
        700)],
        'code-line': '            raise AssertionError(msg)\r\n',
        'first-line': 823,
        'folded-linenos': [],
        'sel-line': 843,
        'sel-line-start': 31158,
        'selection_end': 31158,
        'selection_start': 31158,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/sklearn/preprocessing/_data.py'): {'attrib-starts': [],
        'code-line': 'def normalize(X, norm="l2", *, axis=1, copy=True, return_norm=False):\r\n',
        'first-line': 1744,
        'folded-linenos': [],
        'sel-line': 1757,
        'sel-line-start': 60330,
        'selection_end': 60343,
        'selection_start': 60334,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/spacy/language.py'): {'attrib-starts': [('Language|0|',
        111),
        ('Language|0|.__call__|0|',
         977)],
        'code-line': '        doc = self._ensure_doc(text)\r\n',
        'first-line': 993,
        'folded-linenos': [],
        'sel-line': 998,
        'sel-line-start': 45255,
        'selection_end': 45255,
        'selection_start': 45255,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/torch/_C/_VariableFunctions.pyi'): {'attrib-starts': [],
        'code-line': 'def zeros(size: _size, *, names: Optional[Sequence[Union[str, ellipsis, None]]], dtype: Optional[_dtype]=None, layout: Optional[_layout]=None, device: Optional[Union[_device, str, None]]=None, pin_memory: Optional[_bool]=False, requires_grad: Optional[_bool]=False) -> Tensor: ...\r\n',
        'first-line': 1716,
        'folded-linenos': [],
        'sel-line': 1729,
        'sel-line-start': 152816,
        'selection_end': 152825,
        'selection_start': 152820,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/torch/nn/functional.py'): {'attrib-starts': [],
        'code-line': 'def nll_loss(\r\n',
        'first-line': 2626,
        'folded-linenos': [],
        'sel-line': 2639,
        'sel-line-start': 104596,
        'selection_end': 104608,
        'selection_start': 104600,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python311/Lib/unittest/case.py'): {'attrib-starts': [('TestCase|0|',
        343),
        ('TestCase|0|._baseAssertEqual|0|',
         860)],
        'code-line': '            raise self.failureException(msg)\r\n',
        'first-line': 845,
        'folded-linenos': [],
        'sel-line': 865,
        'sel-line-start': 33596,
        'selection_end': 33596,
        'selection_start': 33596,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/encodings/cp1252.py'): {'attrib-starts': [('IncrementalDecoder|0|',
        20),
        ('IncrementalDecoder|0|.decode|0|',
         21)],
        'code-line': '        return codecs.charmap_decode(input,self.errors,decoding_table)[0]\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 22,
        'sel-line-start': 696,
        'selection_end': 696,
        'selection_start': 696,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/spacy/util.py'): {'attrib-starts': [('load_model|0|',
        300)],
        'code-line': '    raise IOError(Errors.E050.format(name=name))\r\n',
        'first-line': 308,
        'folded-linenos': [],
        'sel-line': 330,
        'sel-line-start': 12888,
        'selection_end': 12888,
        'selection_start': 12888,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/__init__.pyi'): {'attrib-starts': [('randn|7|',
        1675)],
        'code-line': 'def randn(*size: _int, generator: Generator, names: Optional[List[Union[str, None]]], out: Optional[Tensor]=None, dtype: _dtype=None, layout: _layout=strided, device: Union[_device, str, None]=None, requires_grad:_bool=False) -> Tensor: ...\r\n',
        'first-line': 1661,
        'folded-linenos': [],
        'sel-line': 1675,
        'sel-line-start': 107997,
        'selection_end': 108006,
        'selection_start': 108001,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/tensor.py'): {'attrib-starts': [('Tensor|0|',
        40),
        ('Tensor|0|.__array__|0|',
         489)],
        'code-line': '            return self.numpy()\r\n',
        'first-line': 486,
        'folded-linenos': [],
        'sel-line': 491,
        'sel-line-start': 20975,
        'selection_end': 20975,
        'selection_start': 20975,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/lib/random.py'): {'attrib-starts': [('Random|0|',
        77),
        ('Random|0|.sample|0|',
         314)],
        'code-line': '            raise TypeError("Population must be a sequence or set.  For dicts, use list(d).")\r\n',
        'first-line': 336,
        'folded-linenos': [],
        'sel-line': 358,
        'sel-line-start': 13571,
        'selection_end': 13571,
        'selection_start': 13571,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/PIL/Image.py'): {'attrib-starts': [],
        'code-line': '#\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/matplotlib/artist.py'): {'attrib-starts': [('Artist|0|',
        59),
        ('Artist|0|.update|0|',
         971)],
        'code-line': '                        raise AttributeError(f"{type(self).__name__!r} object "\r\n',
        'first-line': 973,
        'folded-linenos': [],
        'sel-line': 995,
        'sel-line-start': 33157,
        'selection_end': 33157,
        'selection_start': 33157,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/matplotlib/axes/_axes.py'): {'attrib-starts': [('Axes|0|',
        70),
        ('Axes|0|.hist|0|',
         6367)],
        'code-line': '                raise ValueError(f"The \'color\' keyword argument must have one "\r\n',
        'first-line': 6589,
        'folded-linenos': [],
        'sel-line': 6611,
        'sel-line-start': 265728,
        'selection_end': 265728,
        'selection_start': 265728,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/matplotlib/axes/_base.py'): {'attrib-starts': [],
        'code-line': 'from collections import OrderedDict\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/matplotlib/ticker.py'): {'attrib-starts': [('MaxNLocator|0|',
        2083)],
        'code-line': 'class MaxNLocator(Locator):\r\n',
        'first-line': 2084,
        'folded-linenos': [],
        'sel-line': 2083,
        'sel-line-start': 72801,
        'selection_end': 72818,
        'selection_start': 72807,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/autograd/__init__.py'): {'attrib-starts': [('backward|0|',
        44)],
        'code-line': '    Variable._execution_engine.run_backward(\r\n',
        'first-line': 84,
        'folded-linenos': [],
        'sel-line': 97,
        'sel-line-start': 4634,
        'selection_end': 4634,
        'selection_start': 4634,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/nn/functional.py'): {'attrib-starts': [('nll_loss|0|',
        2054)],
        'code-line': 'def nll_loss(input, target, weight=None, size_average=None, ignore_index=-100,\r\n',
        'first-line': 2040,
        'folded-linenos': [],
        'sel-line': 2054,
        'sel-line-start': 90187,
        'selection_end': 90199,
        'selection_start': 90191,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/nn/modules/module.py'): {'attrib-starts': [('Module|0|',
        31),
        ('Module|0|.__getattr__|0|',
         65)],
        'code-line': '        raise AttributeError("\'{}\' object has no attribute \'{}\'".format(\r\n',
        'first-line': 570,
        'folded-linenos': [],
        'sel-line': 592,
        'sel-line-start': 24265,
        'selection_end': 24265,
        'selection_start': 24265,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/nn/modules/rnn.py'): {'attrib-starts': [('GRU|0|',
        583)],
        'code-line': 'class GRU(RNNBase):\r\n',
        'first-line': 569,
        'folded-linenos': [],
        'sel-line': 583,
        'sel-line-start': 28183,
        'selection_end': 28192,
        'selection_start': 28189,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/nn/modules/sparse.py'): {'attrib-starts': [('Embedding|0|',
        8)],
        'code-line': 'class Embedding(Module):\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 8,
        'sel-line-start': 143,
        'selection_end': 158,
        'selection_start': 149,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/optim/sgd.py'): {'attrib-starts': [],
        'code-line': 'import torch\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/serialization.py'): {'attrib-starts': [('_open_file|0|',
        212),
        ('_open_file|0|.__init__|0|',
         213)],
        'code-line': '        super(_open_file, self).__init__(open(name, mode))\r\n',
        'first-line': 209,
        'folded-linenos': [],
        'sel-line': 214,
        'sel-line-start': 6838,
        'selection_end': 6838,
        'selection_start': 6838,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/lib/string.py'): {'attrib-starts': [],
        'code-line': 'ascii_letters = ascii_lowercase + ascii_uppercase\r\n',
        'first-line': 12,
        'folded-linenos': [],
        'sel-line': 26,
        'sel-line-start': 1053,
        'selection_end': 1066,
        'selection_start': 1053,
        'zoom': 0},
                       loc('../bioinformatics/phylogeny.py'): {'attrib-starts': [],
        'code-line': '#!/usr/bin/env python\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 21,
        'selection_start': 0,
        'zoom': 0},
                       loc('64317-0.txt'): {'attrib-starts': [],
        'code-line': 'ï»¿The Project Gutenberg eBook of The Great Gatsby, by F. Scott Fitzgerald\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('README.md'): {'attrib-starts': [],
        'code-line': 'word2vec2.py|Test harness for skipgram.py\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 17,
        'sel-line-start': 1408,
        'selection_end': 1449,
        'selection_start': 1449,
        'zoom': 0},
                       loc('bt.py'): {'attrib-starts': [],
                                      'code-line': '\r\n',
                                      'first-line': 9,
                                      'folded-linenos': [],
                                      'sel-line': 28,
                                      'sel-line-start': 1290,
                                      'selection_end': 1290,
                                      'selection_start': 1290,
                                      'zoom': 0},
                       loc('chapter1.txt'): {'attrib-starts': [],
        'code-line': 'In my younger and more vulnerable years my father gave me some advice\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('nano-corpus.txt'): {'attrib-starts': [],
        'code-line': 'paris is france capital.\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 6,
        'sel-line-start': 118,
        'selection_end': 118,
        'selection_start': 118,
        'zoom': 0},
                       loc('nlp.wpr'): {'attrib-starts': [],
        'code-line': "        'create_xkcd_colours')]},\r\n",
        'first-line': 686,
        'folded-linenos': [],
        'sel-line': 699,
        'sel-line-start': 40803,
        'selection_end': 40823,
        'selection_start': 40819,
        'zoom': 0},
                       loc('plot.py'): {'attrib-starts': [],
        'code-line': '#    along with this program.  If not, see <http://www.gnu.org/licenses/>\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 15,
        'sel-line-start': 689,
        'selection_end': 762,
        'selection_start': 762,
        'zoom': 0},
                       loc('rnn.py'): {'attrib-starts': [],
                                       'code-line': " '''\r\n",
                                       'first-line': 0,
                                       'folded-linenos': [],
                                       'sel-line': 24,
                                       'sel-line-start': 1063,
                                       'selection_end': 1067,
                                       'selection_start': 1067,
                                       'zoom': 0},
                       loc('rnn2.py'): {'attrib-starts': [],
        'code-line': '\r\n',
        'first-line': 9,
        'folded-linenos': [],
        'sel-line': 20,
        'sel-line-start': 929,
        'selection_end': 929,
        'selection_start': 929,
        'zoom': 0},
                       loc('seq2seq.py'): {'attrib-starts': [],
        'code-line': '\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 22,
        'sel-line-start': 981,
        'selection_end': 981,
        'selection_start': 981,
        'zoom': 0},
                       loc('skipgram.py'): {'attrib-starts': [],
        'code-line': 'import numpy as np\r\n',
        'first-line': 12,
        'folded-linenos': [],
        'sel-line': 22,
        'sel-line-start': 863,
        'selection_end': 881,
        'selection_start': 881,
        'zoom': 0},
                       loc('spacy-vectors.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('template-test.py'): {'attrib-starts': [],
        'code-line': 'from unittest import main, TestCase\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 19,
        'sel-line-start': 764,
        'selection_end': 764,
        'selection_start': 764,
        'zoom': 0},
                       loc('template.py'): {'attrib-starts': [],
        'code-line': '    parser = ArgumentParser(description=__doc__)\r\n',
        'first-line': 13,
        'folded-linenos': [],
        'sel-line': 25,
        'sel-line-start': 889,
        'selection_end': 929,
        'selection_start': 929,
        'zoom': 0},
                       loc('tf-idf-exec.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('tf-idf.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('tfidf-harness.py'): {'attrib-starts': [],
        'code-line': '    words,tf_idf = TfIdf(docnames=docnames)\r\n',
        'first-line': 9,
        'folded-linenos': [],
        'sel-line': 31,
        'sel-line-start': 1266,
        'selection_end': 1290,
        'selection_start': 1285,
        'zoom': 0},
                       loc('tfidf.py'): {'attrib-starts': [],
        'code-line': 'from tokenizer import read_text, extract_sentences, extract_tokens\r\n',
        'first-line': 3,
        'folded-linenos': [],
        'sel-line': 24,
        'sel-line-start': 926,
        'selection_end': 992,
        'selection_start': 926,
        'zoom': 0},
                       loc('tokenizer.py'): {'attrib-starts': [],
        'code-line': "    for sentence in extract_sentences(extract_tokens(read_text(file_names = ['chapter1.txt']))):\r\n",
        'first-line': 83,
        'folded-linenos': [],
        'sel-line': 97,
        'sel-line-start': 2845,
        'selection_end': 2969,
        'selection_start': 2848,
        'zoom': 0},
                       loc('word2vec.py'): {'attrib-starts': [],
        'code-line': '#!/usr/bin/env python\r\n',
        'first-line': 588,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0}}
proj.build-cmd = {None: ('default',
                         None)}
proj.env-vars = {None: ('default',
                        [''])}
proj.pyexec = {None: ('default',
                      '/Users/Weka/AppData/Local/Programs/Python/Python38/python')}
search.replace-history = ['eta',
                          'n_groups',
                          'np.array',
                          'torch.zeros',
                          'torch.randn',
                          'torch.norm',
                          'torch.matmul',
                          'torch.from_numpy',
                          'torch.flip',
                          'torch.flatten',
                          'torch.dot',
                          'calculate_loss',
                          'lr',
                          "'",
                          'get_samples',
                          'step',
                          'input_language',
                          'output_language',
                          'i',
                          'Losses']
search.search-history = ['epsilon',
                         'n_sets',
                         'word2',
                         'calculate_loss',
                         'chain',
                         'ic',
                         'xkcd',
                         'x',
                         'color',
                         'csv',
                         'colors_and_palette',
                         'colors_and_palettes',
                         'colors',
                         'colours',
                         'figure',
                         'array',
                         'zeros',
                         'save',
                         'randn',
                         'norm']
search.search-scope-history = [loc('.')]

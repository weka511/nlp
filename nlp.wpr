#!wing
#!version=9.0
##################################################################
# Wing project file                                              #
##################################################################
[project attributes]
proj.file-list = [loc('bt.py'),
                  loc('cluster.py'),
                  loc('corpora.py'),
                  loc('plot.py'),
                  loc('README.md'),
                  loc('rnn2.py'),
                  loc('rnn.py'),
                  loc('seq2seq.py'),
                  loc('skipgram.py'),
                  loc('template-test.py'),
                  loc('template.py'),
                  loc('tfidf-harness.py'),
                  loc('tfidf.py'),
                  loc('tokenizer.py'),
                  loc('transformer.py'),
                  loc('word2vec2.py'),
                  loc('word2vec.py')]
proj.file-type = 'normal'
proj.launch-config = {loc('../learn/template.py'): ('project',
        ('--help',
         '')),
                      loc('cluster.py'): ('project',
        ('--load checkpoint',
         '')),
                      loc('corpora.py'): ('project',
        ('--dataset  gatsby1.txt --format Text',
         '')),
                      loc('plot.py'): ('project',
                                       ('gatsby[0-9].pt --show --chain',
        '')),
                      loc('rnn3.py'): ('project',
                                       ('train --output simple --decoder simple --show',
        '')),
                      loc('seq2seq.py'): ('project',
        ('evaluate  --load attention',
         '')),
                      loc('tf-idf-exec.py'): ('project',
        ('*.txt',
         '')),
                      loc('tf-idf.py'): ('project',
        ('*.txt',
         '')),
                      loc('tfidf-harness.py'): ('project',
        ('gatsby*.txt --log',
         '')),
                      loc('word2vec.py'): ('project',
        ('--help',
         '')),
                      loc('word2vec2.py'): ('project',
        ('--help',
         ''))}
[user attributes]
debug.recent-run-args = {loc('../learn/template.py'): ['--help'],
                         loc('cluster.py'): ['--load checkpoint',
        '--n 25 --load checkpoint',
        '--n 8 --load checkpoint',
        '--n 4 --load checkpoint',
        '--n 4',
        '--n 2'],
                         loc('corpora.py'): ['--dataset  gatsby1.txt --format Text',
        '--dataset blogs.zip'],
                         loc('plot.py'): ['gatsby[0-9].pt --show --chain',
        'gatsby2.pt --show --chain',
        'gatsby*.pt --show --chain',
        'gatsby*.pt --show',
        'gatsby[0-9]*.pt --show',
        'gatsby2.pt gatsby3.pt --show',
        'gatsby2.pt gatasby3.pt --show',
        'gatsby2.pt --show',
        'gatsby1.pt --show',
        'foo bar baz --show',
        'foo bar baz'],
                         loc('rnn3.py'): ['train --output simple --decoder simple --show',
        'train --output simple --decoder --simple --show',
        'evaluate --load persist --show',
        'evaluate --load foo',
        'train --output foo --N 1000 ',
        'evaluate',
        'train --N 1000 --printf 10 --frequency 10 --output foo --show',
        '--help',
        '--N 750 --printf 50 --frequency 5 --output temp --show',
        '--N 750 --printf 50 --frequency -5 --output temp --show',
        '--N 750 --printf 50 --frequency -5',
        '--N 750 --printf 50 --frequency -5  --decoder simple',
        '--N 750 --printf 50 --frequency -5  decoder simple',
        '--N 750 --Frequency 50 --Plot -5'],
                         loc('seq2seq.py'): ['evaluate  --load attention',
        'evaluate --decoder attention --load foo',
        'train --decoder attention --output bar',
        'train --decoder simple --output foo',
        'train --decoder attention --output foo',
        '--decoder attention',
        '--help'],
                         loc('skipgram.py'): ['train',
        '--train',
        '--help'],
                         loc('tf-idf-exec.py'): ['*.txt'],
                         loc('tf-idf.py'): ['*.txt',
        'gatsby.txt erewhon.txt'],
                         loc('tfidf-harness.py'): ['gatsby*.txt --log',
        'gatsby*.txt'],
                         loc('word2vec.py'): ['--help',
        'train --corpus gatsby*.txt --show',
        'train --corpusgatsby*.txt --show',
        'train --corpus nano-corpus.txt --show',
        'train --corpus nano-corpus --show',
        'test --saved foo',
        'test --saved mply000239',
        'test --saved bar',
        'train --corpus nano-corpus.txt  --freq 100 --output stochastic --show --embedding 5 --N 200  --optimizer stochastic',
        'train --corpus nano-corpus.txt  --freq 100 --output stochastic --show --embedding 5 --N 20000  --optimizer stochastic',
        'train --corpus nano-corpus.txt  --freq 100 --output gradient --show --embedding 5 --N 5000  --optimizer gradient',
        'train --corpus nano-corpus.txt  --freq 100 --output alpha --show --embedding 5 --N 5000  --optimizer stochastic --minibatch 25',
        'train --corpus nano-corpus.txt  --freq 100 --output alpha --show --embedding 5 --N 5000  --optimzer stochastic --minibatch 25',
        'train --corpus nano-corpus.txt  --freq 100 --output alpha --show --embedding 5 --N 5000  ',
        'train --corpus nano-corpus.txt  --freq 100 --output alpha --show --embedding 5 --N 50000  ',
        'train --corpus nano-corpus.txt  --freq 100 --output alpha --show --embedding 5 --N 50000  --alpha 0.5',
        'train --corpus nano-corpus.txt  --freq 100 --output alpha --show --embedding 5 --N 2000  --alpha 0.5',
        'train --corpus nano-corpus.txt  --freq 100 --output nano --show --embedding 5 --N 50000',
        'train --corpus nano-corpus.txt  --freq 100 --output nano --show --embedding 5',
        'train --corpus nano-corpus.txt  --freq 100 --output nano --shown --embedding 5',
        'train --corpus nano-corpus.txt  --freq 100 --output nano --shown--embedding 5',
        'train --corpus nano-corpus.txt  --freq 100 --output nano --show',
        'train --corpus nano-corpus.txt --N 100 --freq 10 --output nano --show',
        'train --corpus nano-corpus.txt --N 10 --freq 10 --output nano --show',
        'train --corpus nano.txt --N 100 --freq 10 --output nano --show',
        'train --corpus nano --N 100 --freq 10 --output nano --show',
        'test --saved nano',
        'train --corpus nano-corpus.txt --output nano  --embedding 5 --frequency 100',
        'train --corpus nano-corpus.txt --output nano  --embedding 5',
        'train --corpus nano-corpus.txt --output nano  --e,bedding 5'],
                         loc('word2vec2.py'): ['--help',
        'create  gatsby*.txt --format Text --vocabulary blogs-test --examples foo',
        'build gatsby*.txt --format Text --vocabulary blogs-test',
        'build gatsby1.txt --format Text --vocabulary blogs-test',
        'build getsby1.txt --format Text --vocabulary blogs-test',
        'build blogs.zip --n 5 --vocabulary blogs-test',
        'build blogs.zip --n 5 --vocabulary blogs',
        'build blogs.zip --n 5',
        'build --n 5',
        '--n 5',
        'extract',
        'train --resume --load dim256b ',
        'train --restart --load dim256b ',
        'train --examples gatsby --vocabulary gatsby --save dummy --plot dummy  --show --N 100',
        'train --examples gatsby --vocabulary gatsby --save dummy --plot dummy  --show',
        'train --resume --load dummy --N 1000 --plot dummy1 --save dummy1  --show',
        'train --resume --load dummy --N 1000 --plot dummy --save dummy  --show',
        'train resume --N 1000 --plot dummy --save dummy  --show',
        'train --N 1000 --plot dummy --save dummy  --show',
        'train --resume --load  train-k2 --plot dummy --save dummy  --show',
        'train --resume --load  train-k2 --plot dummy --save dummy',
        'train --resume --load word2vec2 --plot dummy --save dummy',
        'train --plot dummy --save dummy',
        'create gatsby*.txt --vocabulary dummy --examples dummy',
        'create gatsby*.txt --vocabulary dummy -- examples dummy',
        'train resume --save foo --plot foo',
        'train --save foo --plot foo',
        ' create gatsby*.txt',
        ' create',
        ' train --vocabulary v1k2_issue24 --examples gatsby1k2_issue24.csv\n']}
debug.show-args-dialog = {loc('skipgram.py'): False}
edit.file-encoding = {loc('chapter1.txt'): 'utf_8'}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'z6bzoexBsToEcnlYFrysBq19zfXe9458',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [2],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.25,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [],
                                 'selected-nodes': [(15,)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('../../../Program Files/Wing Personal 9/resources/builtin-pi-files/__os__/win32/3.11/builtins.pi'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../Program Files/Wing Personal 9/resources/builtin-pi-files/__os__/win32/3.11/builtins.pi'),
                      'BaseExceptionGroup')]},
        loc('../AppData/Local/Programs/Python/Python311/Lib/argparse.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python311/Lib/argparse.py'),
                      'Action')]},
        loc('../AppData/Local/Programs/Python/Python311/Lib/collections/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Local/Programs/Python/Python311/Lib/collections/abc.py'),
                      '')]},
        loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/numpy/core/_methods.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/numpy/core/_methods.py'),
                      'umr_all')]},
        loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/numpy/core/fromnumeric.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/numpy/core/fromnumeric.py'),
                             '__all__')]],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/numpy/core/fromnumeric.py'),
                      'all')]},
        loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/numpy/lib/npyio.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/numpy/lib/npyio.py'),
                      'array_function_dispatch')]},
        loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/numpy/random/_generator.pyi'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/numpy/random/_generator.pyi'),
                      'default_rng')]},
        loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/numpy/testing/_private/utils.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/numpy/testing/_private/utils.py'),
                      'assert_')]},
        loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/pandas/core/frame.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/pandas/core/frame.py'),
                             '_shared_doc_kwargs')]],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/pandas/core/frame.py'),
                      'DataFrame')]},
        loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/sklearn/cluster/_kmeans.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/sklearn/cluster/_kmeans.py'),
                      'KMeans')]},
        loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/sklearn/preprocessing/_data.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/sklearn/preprocessing/_data.py'),
                             '__all__')]],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/sklearn/preprocessing/_data.py'),
                      'add_dummy_feature')]},
        loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/spacy/language.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/spacy/language.py'),
                      'BaseDefaults')]},
        loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/torch/_C/_VariableFunctions.pyi'): {'expanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/torch/_C/_VariableFunctions.pyi'),
                             '__xor__')]],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/torch/_C/_VariableFunctions.pyi'),
                      'abs')]},
        loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/torch/nn/functional.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/torch/nn/functional.pyi'),
                      'adaptive_avg_pool1d')]},
        loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/torch/nn/modules/module.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/torch/nn/modules/module.py'),
                      'Module')]},
        loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/torch/nn/modules/sparse.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/torch/nn/modules/sparse.py'),
                             '__all__')]],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/torch/nn/modules/sparse.py'),
                      'Embedding')]},
        loc('../AppData/Local/Programs/Python/Python311/Lib/unittest/case.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python311/Lib/unittest/case.py'),
                      'addModuleCleanup')]},
        loc('../AppData/Local/Programs/Python/Python311/Lib/xml/dom/expatbuilder.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../AppData/Local/Programs/Python/Python311/Lib/xml/dom/expatbuilder.py'),
                             'CDATA_SECTION_NODE')]],
        'top-node': [('generic attribute',
                      loc('../AppData/Local/Programs/Python/Python311/Lib/xml/dom/expatbuilder.py'),
                      'CDATA_SECTION_NODE')]},
        loc('../AppData/Local/Programs/Python/Python311/Lib/xml/dom/minidom.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python311/Lib/xml/dom/minidom.py'),
                      'Attr')]},
        loc('../AppData/Local/Wing Personal 9/pi-cache/3.11/C/Users/Weka/AppData/Local/Programs/Python/Python311/DLLs/pyexpat.pi'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Local/Wing Personal 9/pi-cache/3.11/C/Users/Weka/AppData/Local/Programs/Python/Python311/DLLs/pyexpat.pi'),
                      'error')]},
        loc('../AppData/Local/Wing Personal 9/pi-cache/3.11/C/Users/Weka/AppData/Local/Programs/Python/Python311/Lib/site-packages/scipy/special/_ufuncs.pi'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Wing Personal 9/pi-cache/3.11/C/Users/Weka/AppData/Local/Programs/Python/Python311/Lib/site-packages/scipy/special/_ufuncs.pi'),
                      'agm')]},
        loc('../AppData/Roaming/Python/Python311/site-packages/nltk/data.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Roaming/Python/Python311/site-packages/nltk/data.py'),
                      'AUTO_FORMATS')]},
        loc('../AppData/Roaming/Python/Python311/site-packages/nltk/tokenize/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Roaming/Python/Python311/site-packages/nltk/tokenize/api.py'),
                      '')]},
        loc('../learn/template.py'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': [('generic attribute',
        loc('../learn/template.py'),
        'accuracy')]},
        loc('README.md'): {'expanded-nodes': [],
                           'selected-nodes': [],
                           'top-node': None},
        loc('bt.py'): {'expanded-nodes': [],
                       'selected-nodes': [],
                       'top-node': [('generic attribute',
                                     loc('bt.py'),
                                     'Betas')]},
        loc('cluster.py'): {'expanded-nodes': [],
                            'selected-nodes': [],
                            'top-node': [('generic attribute',
        loc('cluster.py'),
        'args')]},
        loc('corpora.py'): {'expanded-nodes': [],
                            'selected-nodes': [],
                            'top-node': [('generic attribute',
        loc('corpora.py'),
        'args')]},
        loc('plot.py'): {'expanded-nodes': [],
                         'selected-nodes': [],
                         'top-node': [('generic attribute',
                                       loc('plot.py'),
                                       'args')]},
        loc('rnn.py'): {'expanded-nodes': [],
                        'selected-nodes': [],
                        'top-node': [('generic attribute',
                                      loc('rnn.py'),
                                      'all_losses')]},
        loc('rnn2.py'): {'expanded-nodes': [],
                         'selected-nodes': [],
                         'top-node': [('generic attribute',
                                       loc('rnn2.py'),
                                       'all_losses')]},
        loc('seq2seq.py'): {'expanded-nodes': [],
                            'selected-nodes': [],
                            'top-node': [('generic attribute',
        loc('seq2seq.py'),
        'args')]},
        loc('skipgram.py'): {'expanded-nodes': [[('class def',
        loc('skipgram.py'),
        'Word2Vec')]],
                             'selected-nodes': [[('class def',
        loc('skipgram.py'),
        'Vocabulary')]],
                             'top-node': [('class def',
        loc('skipgram.py'),
        'ExampleBuilder')]},
        loc('template-test.py'): {'expanded-nodes': [],
                                  'selected-nodes': [],
                                  'top-node': [('class def',
        loc('template-test.py'),
        'TestSummat')]},
        loc('template.py'): {'expanded-nodes': [],
                             'selected-nodes': [],
                             'top-node': [('generic attribute',
        loc('template.py'),
        'args')]},
        loc('tf-idf.py'): {'expanded-nodes': [],
                           'selected-nodes': [None],
                           'top-node': [('generic attribute',
        loc('tf-idf.py'),
        'args')]},
        loc('tfidf-harness.py'): {'expanded-nodes': [],
                                  'selected-nodes': [],
                                  'top-node': [('generic attribute',
        loc('tfidf-harness.py'),
        'args')]},
        loc('tfidf.py'): {'expanded-nodes': [],
                          'selected-nodes': [],
                          'top-node': [('function def',
        loc('tfidf.py'),
        'count_words')]},
        loc('tokenizer.py'): {'expanded-nodes': [],
                              'selected-nodes': [[('generic attribute',
        loc('tokenizer.py'),
        'sentence')]],
                              'top-node': [('function def',
        loc('tokenizer.py'),
        'extract_sentences')]},
        loc('transformer.py'): {'expanded-nodes': [],
                                'selected-nodes': [],
                                'top-node': [('generic attribute',
        loc('transformer.py'),
        'args')]},
        loc('unknown:<untitled> #46'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('word2vec.py'): {'expanded-nodes': [],
                             'selected-nodes': [[('generic attribute',
        loc('word2vec.py'),
        'model')]],
                             'top-node': [('generic attribute',
        loc('word2vec.py'),
        'args')]},
        loc('word2vec2.py'): {'expanded-nodes': [],
                              'selected-nodes': [],
                              'top-node': [('generic attribute',
        loc('word2vec2.py'),
        'args')]}},
                                'browse_mode': 'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {'Derived Classes': False,
        'Imported': False,
        'Modules': True}}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [1,
                          0],
        'notebook_display': 'normal',
        'notebook_percent': 0.30000000000000004,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'documentation'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': 'eta',
                                       'fReverse': False,
                                       'fSearchText': 'get_product',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': True,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 40,
                                       'fReplaceText': 'establish_tau',
                                       'fReverse': False,
                                       'fSearchText': 'extract_tokens',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 0,
                       'folded-linenos': [],
                       'history': {None: ['x=[1,2,3]\n',
        'x.clear()\n',
        'x\n']},
                       'launch-id': None,
                       'sel-line': 2,
                       'sel-line-start': 159,
                       'selection_end': 159,
                       'selection_start': 159,
                       'zoom': 0}),
                     ('messages',
                      'wide',
                      2,
                      {'current-domain': 0}),
                     ('os-command',
                      'wide',
                      1,
                      {'last-percent': 0.8,
                       'toolbox-percent': 1.0,
                       'toolbox-tree-sel': ''})],
        'primary_view_state': {'editor_states': ('horizontal',
        0.9990128331688055,
        ({'bookmarks': ([[loc('word2vec2.py'),
                          {'attrib-starts': [('read_training_data|0|',
        35)],
                           'code-line': '       A numpy array, each row consisting of a word, context, and an indicator of +/-\r\n',
                           'first-line': 359,
                           'folded-linenos': [],
                           'sel-line': 43,
                           'sel-line-start': 1500,
                           'selection_end': 1530,
                           'selection_start': 1530,
                           'zoom': 0},
                          1691455350.448236],
                         [loc('corpora.py'),
                          {'attrib-starts': [('Sentence|0|',
        34),
        ('Sentence|0|.__iter__|0|',
         41),
        ('Sentence|0|.__iter__|0|.SentenceIterator|0|',
         43),
        ('Sentence|0|.__iter__|0|.SentenceIterator|0|.__next__|0|',
         47)],
                           'code-line': '                    return self.words[self.n-1]\r\n',
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 50,
                           'sel-line-start': 1673,
                           'selection_end': 1673,
                           'selection_start': 1673,
                           'zoom': 0},
                          1691455356.955349],
                         [loc('corpora.py'),
                          {'attrib-starts': [('Sentence|0|',
        34),
        ('Sentence|0|.__iter__|0|',
         41),
        ('Sentence|0|.__iter__|0|.SentenceIterator|0|',
         43),
        ('Sentence|0|.__iter__|0|.SentenceIterator|0|.__next__|0|',
         47)],
                           'code-line': '                    return self.words[self.n-1]\r\n',
                           'first-line': 33,
                           'folded-linenos': [],
                           'sel-line': 50,
                           'sel-line-start': 1673,
                           'selection_end': 1673,
                           'selection_start': 1673,
                           'zoom': 0},
                          1691455365.3305502],
                         [loc('corpora.py'),
                          {'attrib-starts': [('Sentence|0|',
        34),
        ('Sentence|0|.__iter__|0|',
         41),
        ('Sentence|0|.__iter__|0|.SentenceIterator|0|',
         43),
        ('Sentence|0|.__iter__|0|.SentenceIterator|0|.__next__|0|',
         47)],
                           'code-line': '                    return self.words[self.n-1]\r\n',
                           'first-line': 159,
                           'folded-linenos': [],
                           'sel-line': 50,
                           'sel-line-start': 1673,
                           'selection_end': 1673,
                           'selection_start': 1673,
                           'zoom': 0},
                          1691455788.8121963],
                         [loc('corpora.py'),
                          {'attrib-starts': [],
                           'code-line': '    Data is supported in several different formats, e.g. text, zipped XML.\r\n',
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 19,
                           'sel-line-start': 790,
                           'selection_end': 864,
                           'selection_start': 864,
                           'zoom': 0},
                          1691455877.2386677],
                         [loc('corpora.py'),
                          {'attrib-starts': [('Sentence|0|',
        37),
        ('Sentence|0|.__len__|0|',
         59)],
                           'code-line': "        '''Length of sentence in words'''\r\n",
                           'first-line': 51,
                           'folded-linenos': [],
                           'sel-line': 60,
                           'sel-line-start': 1977,
                           'selection_end': 1994,
                           'selection_start': 1994,
                           'zoom': 0},
                          1691455910.5407848],
                         [loc('word2vec2.py'),
                          {'attrib-starts': [],
                           'code-line': "def is_stopping(token='stop',message='Stopfile detected and deleted'):\r\n",
                           'first-line': 177,
                           'folded-linenos': [],
                           'sel-line': 180,
                           'sel-line-start': 8864,
                           'selection_end': 8901,
                           'selection_start': 8901,
                           'zoom': 0},
                          1691455979.13056],
                         [loc('corpora.py'),
                          {'attrib-starts': [('Sentence|0|',
        37),
        ('Sentence|0|.__len__|0|',
         59)],
                           'code-line': "        '''Length of sentence in words'''\r\n",
                           'first-line': 147,
                           'folded-linenos': [],
                           'sel-line': 60,
                           'sel-line-start': 1977,
                           'selection_end': 1994,
                           'selection_start': 1994,
                           'zoom': 0},
                          1691455980.973428],
                         [loc('word2vec2.py'),
                          {'attrib-starts': [('read_training_data|0|',
        35)],
                           'code-line': '       A numpy array, each row consisting of a word, context, and an indicator of +/-\r\n',
                           'first-line': 359,
                           'folded-linenos': [],
                           'sel-line': 43,
                           'sel-line-start': 1500,
                           'selection_end': 1530,
                           'selection_start': 1530,
                           'zoom': 0},
                          1691455985.3179398],
                         [loc('tokenizer.py'),
                          {'attrib-starts': [('read_text|0|',
        22)],
                           'code-line': "        with open(file_name,encoding='utf-8') as text_file:\r\n",
                           'first-line': 9,
                           'folded-linenos': [],
                           'sel-line': 34,
                           'sel-line-start': 1210,
                           'selection_end': 1269,
                           'selection_start': 1218,
                           'zoom': 0},
                          1691455986.7916288],
                         [loc('word2vec2.py'),
                          {'attrib-starts': [],
                           'code-line': "def is_stopping(token='stop',message='Stopfile detected and deleted'):\r\n",
                           'first-line': 177,
                           'folded-linenos': [],
                           'sel-line': 180,
                           'sel-line-start': 8864,
                           'selection_end': 8901,
                           'selection_start': 8901,
                           'zoom': 0},
                          1691456349.6941059],
                         [loc('../AppData/Local/Programs/Python/Python311/Lib/argparse.py'),
                          {'attrib-starts': [('_ActionsContainer|0|',
        1327),
        ('_ActionsContainer|0|._get_positional_kwargs|0|',
         1536)],
                           'code-line': '            raise TypeError(msg)\r\n',
                           'first-line': 1520,
                           'folded-linenos': [],
                           'sel-line': 1540,
                           'sel-line-start': 56236,
                           'selection_end': 56236,
                           'selection_start': 56236,
                           'zoom': 0},
                          1691456351.9021406],
                         [loc('../AppData/Local/Programs/Python/Python311/Lib/argparse.py'),
                          {'attrib-starts': [('HelpFormatter|0|',
        156),
        ('HelpFormatter|0|._expand_help|0|',
         621)],
                           'code-line': '        return self._get_help_string(action) % params\r\n',
                           'first-line': 627,
                           'folded-linenos': [],
                           'sel-line': 632,
                           'sel-line-start': 24050,
                           'selection_end': 24050,
                           'selection_start': 24050,
                           'zoom': 0},
                          1691456362.7540247],
                         [loc('word2vec2.py'),
                          {'attrib-starts': [],
                           'code-line': '    args = create_arguments()\r\n',
                           'first-line': 344,
                           'folded-linenos': [],
                           'sel-line': 362,
                           'sel-line-start': 16157,
                           'selection_end': 16184,
                           'selection_start': 16168,
                           'zoom': 0},
                          1691456378.7225099],
                         [loc('word2vec2.py'),
                          {'attrib-starts': [('create_arguments|0|',
        97)],
                           'code-line': "    group_create = parser.add_argument_group('create', 'Parameters for creating training examples')\r\n",
                           'first-line': 110,
                           'folded-linenos': [],
                           'sel-line': 126,
                           'sel-line-start': 5090,
                           'selection_end': 5189,
                           'selection_start': 5189,
                           'zoom': 0},
                          1691456492.943971],
                         [loc('word2vec2.py'),
                          {'attrib-starts': [('create_arguments|0|',
        97)],
                           'code-line': "    group_extract.add_argument('--triplets', default='triplets', help='File name to save distance matrices (default: %(default)s)')\r\n",
                           'first-line': 138,
                           'folded-linenos': [],
                           'sel-line': 155,
                           'sel-line-start': 7973,
                           'selection_end': 7974,
                           'selection_start': 7974,
                           'zoom': 0},
                          1691456503.218739],
                         [loc('word2vec2.py'),
                          {'attrib-starts': [('create_arguments|0|',
        97)],
                           'code-line': "    # parser.add_argument('--logfile', default='logfile.txt', help='Path to save error messages (default: %(default)s)')\r\n",
                           'first-line': 100,
                           'folded-linenos': [],
                           'sel-line': 120,
                           'sel-line-start': 4629,
                           'selection_end': 4639,
                           'selection_start': 4639,
                           'zoom': 0},
                          1691456525.1354828],
                         [loc('../AppData/Local/Programs/Python/Python311/Lib/argparse.py'),
                          {'attrib-starts': [('HelpFormatter|0|',
        156),
        ('HelpFormatter|0|._expand_help|0|',
         621)],
                           'code-line': '        return self._get_help_string(action) % params\r\n',
                           'first-line': 627,
                           'folded-linenos': [],
                           'sel-line': 632,
                           'sel-line-start': 24050,
                           'selection_end': 24050,
                           'selection_start': 24050,
                           'zoom': 0},
                          1691456542.668268],
                         [loc('word2vec2.py'),
                          {'attrib-starts': [('create_arguments|0|',
        97)],
                           'code-line': "    # parser.add_argument('command', choices=['build', 'create', 'train', 'postprocess', 'extract'],\r\n",
                           'first-line': 100,
                           'folded-linenos': [],
                           'sel-line': 105,
                           'sel-line-start': 3371,
                           'selection_end': 3971,
                           'selection_start': 3371,
                           'zoom': 0},
                          1691456583.39747],
                         [loc('../AppData/Local/Programs/Python/Python311/Lib/argparse.py'),
                          {'attrib-starts': [('HelpFormatter|0|',
        156),
        ('HelpFormatter|0|._expand_help|0|',
         621)],
                           'code-line': '        return self._get_help_string(action) % params\r\n',
                           'first-line': 627,
                           'folded-linenos': [],
                           'sel-line': 632,
                           'sel-line-start': 24050,
                           'selection_end': 24050,
                           'selection_start': 24050,
                           'zoom': 0},
                          1691456621.267638]],
                        20),
          'current-loc': loc('word2vec2.py'),
          'editor-state-list': [(loc('word2vec2.py'),
                                 {'attrib-starts': [('create_arguments|0|',
        97)],
                                  'code-line': "    group_build.add_argument('--format', choices=['ZippedXml', 'Text'], default='ZippedXml', help='Format for corpus (default: ZippedXml)')\r\n",
                                  'first-line': 103,
                                  'folded-linenos': [],
                                  'sel-line': 124,
                                  'sel-line-start': 4946,
                                  'selection_end': 5082,
                                  'selection_start': 5082,
                                  'zoom': 0})],
          'has-focus': True,
          'locked': False},
         [loc('word2vec2.py')]),
        ({'bookmarks': ([[loc('word2vec.py'),
                          {'attrib-starts': [],
                           'code-line': '#!/usr/bin/env python\r\n',
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 0,
                           'sel-line-start': 0,
                           'selection_end': 762,
                           'selection_start': 0,
                           'zoom': 0},
                          1686110355.8228083],
                         [loc('skipgram.py'),
                          {'attrib-starts': [],
                           'code-line': 'import numpy as np\r\n',
                           'first-line': 12,
                           'folded-linenos': [],
                           'sel-line': 22,
                           'sel-line-start': 863,
                           'selection_end': 881,
                           'selection_start': 881,
                           'zoom': 0},
                          1686177623.6113675],
                         [loc('../AppData/Local/Programs/Python/Python311/Lib/unittest/case.py'),
                          {'attrib-starts': [('TestCase|0|',
        343),
        ('TestCase|0|._baseAssertEqual|0|',
         860)],
                           'code-line': '            raise self.failureException(msg)\r\n',
                           'first-line': 853,
                           'folded-linenos': [],
                           'sel-line': 865,
                           'sel-line-start': 33596,
                           'selection_end': 33596,
                           'selection_start': 33596,
                           'zoom': 0},
                          1686177624.2979283],
                         [loc('tfidf.py'),
                          {'attrib-starts': [],
                           'code-line': '#!/usr/bin/env python\r\n',
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 0,
                           'sel-line-start': 0,
                           'selection_end': 0,
                           'selection_start': 0,
                           'zoom': 0},
                          1686177625.0159385],
                         [loc('template-test.py'),
                          {'attrib-starts': [],
                           'code-line': '#!/usr/bin/env python\r\n',
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 0,
                           'sel-line-start': 0,
                           'selection_end': 0,
                           'selection_start': 0,
                           'zoom': 0},
                          1686177625.849813],
                         [loc('transformer.py'),
                          {'attrib-starts': [],
                           'code-line': '    parser = ArgumentParser(description=__doc__)\r\n',
                           'first-line': 13,
                           'folded-linenos': [],
                           'sel-line': 25,
                           'sel-line-start': 889,
                           'selection_end': 929,
                           'selection_start': 929,
                           'zoom': 0},
                          1687681615.5570865],
                         [loc('transformer.py'),
                          {'attrib-starts': [],
                           'code-line': '    parser = ArgumentParser(description=__doc__)\r\n',
                           'first-line': 13,
                           'folded-linenos': [],
                           'sel-line': 415,
                           'sel-line-start': 15254,
                           'selection_end': 15294,
                           'selection_start': 15294,
                           'zoom': 0},
                          1688083019.0410883],
                         [loc('word2vec.py'),
                          {'attrib-starts': [],
                           'code-line': '#!/usr/bin/env python\r\n',
                           'first-line': 600,
                           'folded-linenos': [],
                           'sel-line': 0,
                           'sel-line-start': 0,
                           'selection_end': 0,
                           'selection_start': 0,
                           'zoom': 0},
                          1688243229.959094],
                         [loc('word2vec2.py'),
                          {'attrib-starts': [],
                           'code-line': "'''Skipgrams as described in Chapter 6 of Jurafsky & Martin'''\r\n",
                           'first-line': 19,
                           'folded-linenos': [],
                           'sel-line': 18,
                           'sel-line-start': 726,
                           'selection_end': 753,
                           'selection_start': 753,
                           'zoom': 0},
                          1689026039.5621715],
                         [loc('skipgram.py'),
                          {'attrib-starts': [('Word2Vec|0|',
        206)],
                           'code-line': '    def get_product(self,i_w,i_c):\r\n',
                           'first-line': 452,
                           'folded-linenos': [],
                           'sel-line': 225,
                           'sel-line-start': 7373,
                           'selection_end': 7392,
                           'selection_start': 7381,
                           'zoom': 0},
                          1689031032.716388],
                         [loc('skipgram.py'),
                          {'attrib-starts': [('Word2Vec|0|',
        206)],
                           'code-line': '    def get_product(self,i_w,i_c):\r\n',
                           'first-line': 503,
                           'folded-linenos': [],
                           'sel-line': 225,
                           'sel-line-start': 7373,
                           'selection_end': 7392,
                           'selection_start': 7381,
                           'zoom': 0},
                          1689124584.1746602],
                         [loc('../AppData/Local/Programs/Python/Python311/Lib/unittest/case.py'),
                          {'attrib-starts': [('TestCase|0|',
        343),
        ('TestCase|0|.fail|0|',
         700)],
                           'code-line': '        raise self.failureException(msg)\r\n',
                           'first-line': 697,
                           'folded-linenos': [],
                           'sel-line': 702,
                           'sel-line-start': 26084,
                           'selection_end': 26084,
                           'selection_start': 26084,
                           'zoom': 0},
                          1689124591.0972986],
                         [loc('word2vec2.py'),
                          {'attrib-starts': [],
                           'code-line': "'''Skipgrams as described in Chapter 6 of Jurafsky & Martin'''\r\n",
                           'first-line': 19,
                           'folded-linenos': [],
                           'sel-line': 18,
                           'sel-line-start': 726,
                           'selection_end': 753,
                           'selection_start': 753,
                           'zoom': 0},
                          1689124613.1508389],
                         [loc('skipgram.py'),
                          {'attrib-starts': [('Word2Vec|0|',
        218)],
                           'code-line': '    def get_product(self,i_w,i_c):\r\n',
                           'first-line': 519,
                           'folded-linenos': [],
                           'sel-line': 237,
                           'sel-line-start': 7841,
                           'selection_end': 7860,
                           'selection_start': 7849,
                           'zoom': 0},
                          1689394542.9038055],
                         [loc('word2vec.py'),
                          {'attrib-starts': [],
                           'code-line': '   https://towardsdatascience.com/implementing-word2vec-in-pytorch-skip-gram-model-e6bae040d2fb\r\n',
                           'first-line': 440,
                           'folded-linenos': [],
                           'sel-line': 22,
                           'sel-line-start': 1108,
                           'selection_end': 1203,
                           'selection_start': 1203,
                           'zoom': 0},
                          1689634149.6522958],
                         [loc('skipgram.py'),
                          {'attrib-starts': [('Word2Vec|0|',
        218)],
                           'code-line': '    def get_product(self,i_w,i_c):\r\n',
                           'first-line': 519,
                           'folded-linenos': [],
                           'sel-line': 237,
                           'sel-line-start': 7841,
                           'selection_end': 7860,
                           'selection_start': 7849,
                           'zoom': 0},
                          1689634150.957271],
                         [loc('cluster.py'),
                          {'attrib-starts': [('create_arguments|0|',
        28)],
                           'code-line': "    parser.add_argument('--data', default='./data', help='Path to data files')\r\n",
                           'first-line': 28,
                           'folded-linenos': [],
                           'sel-line': 38,
                           'sel-line-start': 1274,
                           'selection_end': 1323,
                           'selection_start': 1323,
                           'zoom': 0},
                          1689810333.2702687],
                         [loc('skipgram.py'),
                          {'attrib-starts': [('Word2Vec|0|',
        220)],
                           'code-line': '    def get_product(self,i_w,i_c):\r\n',
                           'first-line': 532,
                           'folded-linenos': [],
                           'sel-line': 245,
                           'sel-line-start': 8227,
                           'selection_end': 8246,
                           'selection_start': 8235,
                           'zoom': 0},
                          1690489009.1220992],
                         [loc('word2vec2.py'),
                          {'attrib-starts': [],
                           'code-line': "def is_stopping(token='stop',message='Stopfile detected and deleted'):\r\n",
                           'first-line': 177,
                           'folded-linenos': [],
                           'sel-line': 180,
                           'sel-line-start': 8864,
                           'selection_end': 8901,
                           'selection_start': 8901,
                           'zoom': 0},
                          1691455985.5342178],
                         [loc('tokenizer.py'),
                          {'attrib-starts': [('read_text|0|',
        22)],
                           'code-line': "        with open(file_name,encoding='utf-8') as text_file:\r\n",
                           'first-line': 15,
                           'folded-linenos': [],
                           'sel-line': 34,
                           'sel-line-start': 1210,
                           'selection_end': 1269,
                           'selection_start': 1218,
                           'zoom': 0},
                          1691455987.9799085]],
                        20),
          'current-loc': loc('word2vec2.py'),
          'editor-state-list': [(loc('word2vec2.py'),
                                 {'attrib-starts': [],
                                  'code-line': "def is_stopping(token='stop',message='Stopfile detected and deleted'):\r\n",
                                  'first-line': 177,
                                  'folded-linenos': [],
                                  'sel-line': 180,
                                  'sel-line-start': 8863,
                                  'selection_end': 8900,
                                  'selection_start': 8900,
                                  'zoom': 0})],
          'has-focus': False,
          'locked': False},
         [loc('word2vec2.py')])),
                               'open_files': ['word2vec2.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.5},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((1,
                           0),
                          1691456731.5592217),
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {},
                 'splits': 1,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    2),
                                   1691456356.7505393),
                 'user_data': {}},
        'window-alloc': (11,
                         0,
                         1308,
                         734)}]}
guimgr.recent-documents = [loc('word2vec2.py')]
guimgr.visual-state = {loc('../../../Program Files (x86)/Wing Personal 7.2/resources/builtin-pi-files/__os__/win32/3.8/re.pi'): {'attrib-starts': [],
        'code-line': '# coding: utf-8\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('../../../Program Files (x86)/Wing Personal 7.2/resources/builtin-pi-files/__os__/win32/3.8/unicodedata.pi'): {'attrib-starts': [('category|0|',
        117)],
        'code-line': 'def category(chr):\n',
        'first-line': 103,
        'folded-linenos': [],
        'sel-line': 117,
        'sel-line-start': 3923,
        'selection_end': 3935,
        'selection_start': 3927,
        'zoom': 0},
                       loc('../../../Program Files (x86)/Wing Personal 7.2/resources/typeshed/stdlib/3/os/__init__.pyi'): {'attrib-starts': [('remove|1|',
        439)],
        'code-line': '    def remove(path: _PathType) -> None: ...\n',
        'first-line': 425,
        'folded-linenos': [],
        'sel-line': 439,
        'sel-line-start': 16110,
        'selection_end': 16124,
        'selection_start': 16118,
        'zoom': 0},
                       loc('../../../Program Files/Wing Personal 9/resources/builtin-pi-files/__os__/win32/3.11/builtins.pi'): {'attrib-starts': [],
        'code-line': 'def len(obj):\n',
        'first-line': 1901,
        'folded-linenos': [],
        'sel-line': 1914,
        'sel-line-start': 56905,
        'selection_end': 56912,
        'selection_start': 56909,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python311/Lib/abc.py'): {'attrib-starts': [('ABCMeta|0|',
        91),
        ('ABCMeta|0|.__instancecheck__|0|',
         116)],
        'code-line': '            return _abc_instancecheck(cls, instance)\r\n',
        'first-line': 98,
        'folded-linenos': [],
        'sel-line': 118,
        'sel-line-start': 3732,
        'selection_end': 3732,
        'selection_start': 3732,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python311/Lib/argparse.py'): {'attrib-starts': [('HelpFormatter|0|',
        156),
        ('HelpFormatter|0|._expand_help|0|',
         621)],
        'code-line': '        return self._get_help_string(action) % params\r\n',
        'first-line': 627,
        'folded-linenos': [],
        'sel-line': 632,
        'sel-line-start': 24050,
        'selection_end': 24050,
        'selection_start': 24050,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python311/Lib/collections/__init__.py'): {'attrib-starts': [],
        'code-line': 'class Counter(dict):\r\n',
        'first-line': 520,
        'folded-linenos': [],
        'sel-line': 533,
        'sel-line-start': 18814,
        'selection_end': 18827,
        'selection_start': 18820,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python311/Lib/contextlib.py'): {'attrib-starts': [('ContextDecorator|0|',
        61),
        ('ContextDecorator|0|.__call__|0|',
         76),
        ('ContextDecorator|0|.__call__|0|.inner|0|',
         78)],
        'code-line': '            with self._recreate_cm():\r\n',
        'first-line': 59,
        'folded-linenos': [],
        'sel-line': 79,
        'sel-line-start': 2528,
        'selection_end': 2528,
        'selection_start': 2528,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python311/Lib/encodings/cp1252.py'): {'attrib-starts': [('IncrementalDecoder|0|',
        20),
        ('IncrementalDecoder|0|.decode|0|',
         21)],
        'code-line': '        return codecs.charmap_decode(input,self.errors,decoding_table)[0]\r\n',
        'first-line': 9,
        'folded-linenos': [],
        'sel-line': 22,
        'sel-line-start': 696,
        'selection_end': 696,
        'selection_start': 696,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python311/Lib/random.py'): {'attrib-starts': [('SystemRandom|0|',
        783),
        ('SystemRandom|0|.getrandbits|0|',
         796)],
        'code-line': '        if k < 0:\r\n',
        'first-line': 778,
        'folded-linenos': [],
        'sel-line': 798,
        'sel-line-start': 29273,
        'selection_end': 29273,
        'selection_start': 29273,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/matplotlib/figure.py'): {'attrib-starts': [('FigureBase|0|',
        157)],
        'code-line': '    def subplots(self, nrows=1, ncols=1, *, sharex=False, sharey=False,\r\n',
        'first-line': 772,
        'folded-linenos': [],
        'sel-line': 761,
        'sel-line-start': 28535,
        'selection_end': 28551,
        'selection_start': 28543,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/numpy/__init__.py'): {'attrib-starts': [('__getattr__|0|',
        273)],
        'code-line': '        raise AttributeError("module {!r} has no attribute "\r\n',
        'first-line': 290,
        'folded-linenos': [],
        'sel-line': 310,
        'sel-line-start': 11179,
        'selection_end': 11179,
        'selection_start': 11179,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/numpy/core/_methods.py'): {'attrib-starts': [('_amax|0|',
        37)],
        'code-line': '    return umr_maximum(a, axis, None, out, keepdims, initial, where)\r\n',
        'first-line': 19,
        'folded-linenos': [],
        'sel-line': 39,
        'sel-line-start': 1298,
        'selection_end': 1298,
        'selection_start': 1298,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/numpy/core/fromnumeric.py'): {'attrib-starts': [],
        'code-line': "def argpartition(a, kth, axis=-1, kind='introselect', order=None):\r\n",
        'first-line': 3687,
        'folded-linenos': [],
        'sel-line': 766,
        'sel-line-start': 25710,
        'selection_end': 25726,
        'selection_start': 25714,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/numpy/core/multiarray.py'): {'attrib-starts': [],
        'code-line': 'def where(condition, x=None, y=None):\r\n',
        'first-line': 349,
        'folded-linenos': [],
        'sel-line': 341,
        'sel-line-start': 12125,
        'selection_end': 12134,
        'selection_start': 12129,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/numpy/core/multiarray.pyi'): {'attrib-starts': [],
        'code-line': 'def empty(\r\n',
        'first-line': 236,
        'folded-linenos': [],
        'sel-line': 249,
        'sel-line-start': 5126,
        'selection_end': 5135,
        'selection_start': 5130,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/numpy/lib/format.py'): {'attrib-starts': [('read_array|0|',
        718)],
        'code-line': '            raise ValueError("Object arrays cannot be loaded when "\r\n',
        'first-line': 755,
        'folded-linenos': [],
        'sel-line': 775,
        'sel-line-start': 27375,
        'selection_end': 27375,
        'selection_start': 27375,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/numpy/lib/npyio.py'): {'attrib-starts': [('load|0|',
        263)],
        'code-line': '            fid = stack.enter_context(open(os_fspath(file), "rb"))\r\n',
        'first-line': 384,
        'folded-linenos': [],
        'sel-line': 404,
        'sel-line-start': 14744,
        'selection_end': 14744,
        'selection_start': 14744,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/numpy/random/_generator.pyi'): {'attrib-starts': [('Generator|0|',
        65)],
        'code-line': '    def uniform(self, low: float = ..., high: float = ..., size: None = ...) -> float: ...  # type: ignore[misc]\r\n',
        'first-line': 359,
        'folded-linenos': [],
        'sel-line': 372,
        'sel-line-start': 11805,
        'selection_end': 11820,
        'selection_start': 11813,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/numpy/testing/_private/utils.py'): {'attrib-starts': [('assert_array_compare|0|',
        700)],
        'code-line': '            raise AssertionError(msg)\r\n',
        'first-line': 823,
        'folded-linenos': [],
        'sel-line': 843,
        'sel-line-start': 31158,
        'selection_end': 31158,
        'selection_start': 31158,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/pandas/core/frame.py'): {'attrib-starts': [],
        'code-line': 'import warnings\r\n',
        'first-line': 21,
        'folded-linenos': [],
        'sel-line': 32,
        'sel-line-start': 686,
        'selection_end': 789,
        'selection_start': 686,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/sklearn/cluster/_kmeans.py'): {'attrib-starts': [],
        'code-line': 'class KMeans(_BaseKMeans):\r\n',
        'first-line': 1253,
        'folded-linenos': [],
        'sel-line': 1209,
        'sel-line-start': 42731,
        'selection_end': 42743,
        'selection_start': 42737,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/sklearn/preprocessing/_data.py'): {'attrib-starts': [],
        'code-line': 'def normalize(X, norm="l2", *, axis=1, copy=True, return_norm=False):\r\n',
        'first-line': 1744,
        'folded-linenos': [],
        'sel-line': 1757,
        'sel-line-start': 60330,
        'selection_end': 60343,
        'selection_start': 60334,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/spacy/language.py'): {'attrib-starts': [('Language|0|',
        111),
        ('Language|0|.__call__|0|',
         977)],
        'code-line': '        doc = self._ensure_doc(text)\r\n',
        'first-line': 993,
        'folded-linenos': [],
        'sel-line': 998,
        'sel-line-start': 45255,
        'selection_end': 45255,
        'selection_start': 45255,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/torch/_C/_VariableFunctions.pyi'): {'attrib-starts': [],
        'code-line': 'def zeros(size: _size, *, names: Optional[Sequence[Union[str, ellipsis, None]]], dtype: Optional[_dtype]=None, layout: Optional[_layout]=None, device: Optional[Union[_device, str, None]]=None, pin_memory: Optional[_bool]=False, requires_grad: Optional[_bool]=False) -> Tensor: ...\r\n',
        'first-line': 1716,
        'folded-linenos': [],
        'sel-line': 1729,
        'sel-line-start': 152816,
        'selection_end': 152825,
        'selection_start': 152820,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/torch/nn/functional.py'): {'attrib-starts': [],
        'code-line': 'def nll_loss(\r\n',
        'first-line': 2626,
        'folded-linenos': [],
        'sel-line': 2639,
        'sel-line-start': 104596,
        'selection_end': 104608,
        'selection_start': 104600,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/torch/nn/modules/module.py'): {'attrib-starts': [('Module|0|',
        365),
        ('Module|0|._call_impl|0|',
         1493)],
        'code-line': '            return forward_call(*args, **kwargs)\r\n',
        'first-line': 1488,
        'folded-linenos': [],
        'sel-line': 1500,
        'sel-line-start': 64904,
        'selection_end': 64904,
        'selection_start': 64904,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/torch/nn/modules/sparse.py'): {'attrib-starts': [],
        'code-line': 'class Embedding(Module):\r\n',
        'first-line': 3,
        'folded-linenos': [],
        'sel-line': 12,
        'sel-line-start': 241,
        'selection_end': 256,
        'selection_start': 247,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python311/Lib/unittest/case.py'): {'attrib-starts': [('TestCase|0|',
        343),
        ('TestCase|0|._baseAssertEqual|0|',
         860)],
        'code-line': '            raise self.failureException(msg)\r\n',
        'first-line': 845,
        'folded-linenos': [],
        'sel-line': 865,
        'sel-line-start': 33596,
        'selection_end': 33596,
        'selection_start': 33596,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python311/Lib/xml/dom/expatbuilder.py'): {'attrib-starts': [('ExpatBuilder|0|',
        132),
        ('ExpatBuilder|0|.parseString|0|',
         218)],
        'code-line': '            parser.Parse(string, True)\r\n',
        'first-line': 217,
        'folded-linenos': [],
        'sel-line': 222,
        'sel-line-start': 8454,
        'selection_end': 8454,
        'selection_start': 8454,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/encodings/cp1252.py'): {'attrib-starts': [('IncrementalDecoder|0|',
        20),
        ('IncrementalDecoder|0|.decode|0|',
         21)],
        'code-line': '        return codecs.charmap_decode(input,self.errors,decoding_table)[0]\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 22,
        'sel-line-start': 696,
        'selection_end': 696,
        'selection_start': 696,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/spacy/util.py'): {'attrib-starts': [('load_model|0|',
        300)],
        'code-line': '    raise IOError(Errors.E050.format(name=name))\r\n',
        'first-line': 308,
        'folded-linenos': [],
        'sel-line': 330,
        'sel-line-start': 12888,
        'selection_end': 12888,
        'selection_start': 12888,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/__init__.pyi'): {'attrib-starts': [('randn|7|',
        1675)],
        'code-line': 'def randn(*size: _int, generator: Generator, names: Optional[List[Union[str, None]]], out: Optional[Tensor]=None, dtype: _dtype=None, layout: _layout=strided, device: Union[_device, str, None]=None, requires_grad:_bool=False) -> Tensor: ...\r\n',
        'first-line': 1661,
        'folded-linenos': [],
        'sel-line': 1675,
        'sel-line-start': 107997,
        'selection_end': 108006,
        'selection_start': 108001,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/tensor.py'): {'attrib-starts': [('Tensor|0|',
        40),
        ('Tensor|0|.__array__|0|',
         489)],
        'code-line': '            return self.numpy()\r\n',
        'first-line': 486,
        'folded-linenos': [],
        'sel-line': 491,
        'sel-line-start': 20975,
        'selection_end': 20975,
        'selection_start': 20975,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/lib/random.py'): {'attrib-starts': [('Random|0|',
        77),
        ('Random|0|.sample|0|',
         314)],
        'code-line': '            raise TypeError("Population must be a sequence or set.  For dicts, use list(d).")\r\n',
        'first-line': 336,
        'folded-linenos': [],
        'sel-line': 358,
        'sel-line-start': 13571,
        'selection_end': 13571,
        'selection_start': 13571,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/PIL/Image.py'): {'attrib-starts': [],
        'code-line': '#\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/matplotlib/artist.py'): {'attrib-starts': [('Artist|0|',
        59),
        ('Artist|0|.update|0|',
         971)],
        'code-line': '                        raise AttributeError(f"{type(self).__name__!r} object "\r\n',
        'first-line': 973,
        'folded-linenos': [],
        'sel-line': 995,
        'sel-line-start': 33157,
        'selection_end': 33157,
        'selection_start': 33157,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/matplotlib/axes/_axes.py'): {'attrib-starts': [('Axes|0|',
        70),
        ('Axes|0|.hist|0|',
         6367)],
        'code-line': '                raise ValueError(f"The \'color\' keyword argument must have one "\r\n',
        'first-line': 6589,
        'folded-linenos': [],
        'sel-line': 6611,
        'sel-line-start': 265728,
        'selection_end': 265728,
        'selection_start': 265728,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/matplotlib/axes/_base.py'): {'attrib-starts': [],
        'code-line': 'from collections import OrderedDict\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/matplotlib/ticker.py'): {'attrib-starts': [('MaxNLocator|0|',
        2083)],
        'code-line': 'class MaxNLocator(Locator):\r\n',
        'first-line': 2084,
        'folded-linenos': [],
        'sel-line': 2083,
        'sel-line-start': 72801,
        'selection_end': 72818,
        'selection_start': 72807,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/autograd/__init__.py'): {'attrib-starts': [('backward|0|',
        44)],
        'code-line': '    Variable._execution_engine.run_backward(\r\n',
        'first-line': 84,
        'folded-linenos': [],
        'sel-line': 97,
        'sel-line-start': 4634,
        'selection_end': 4634,
        'selection_start': 4634,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/nn/functional.py'): {'attrib-starts': [('nll_loss|0|',
        2054)],
        'code-line': 'def nll_loss(input, target, weight=None, size_average=None, ignore_index=-100,\r\n',
        'first-line': 2040,
        'folded-linenos': [],
        'sel-line': 2054,
        'sel-line-start': 90187,
        'selection_end': 90199,
        'selection_start': 90191,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/nn/modules/module.py'): {'attrib-starts': [('Module|0|',
        31),
        ('Module|0|.__getattr__|0|',
         65)],
        'code-line': '        raise AttributeError("\'{}\' object has no attribute \'{}\'".format(\r\n',
        'first-line': 570,
        'folded-linenos': [],
        'sel-line': 592,
        'sel-line-start': 24265,
        'selection_end': 24265,
        'selection_start': 24265,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/nn/modules/rnn.py'): {'attrib-starts': [('GRU|0|',
        583)],
        'code-line': 'class GRU(RNNBase):\r\n',
        'first-line': 569,
        'folded-linenos': [],
        'sel-line': 583,
        'sel-line-start': 28183,
        'selection_end': 28192,
        'selection_start': 28189,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/nn/modules/sparse.py'): {'attrib-starts': [('Embedding|0|',
        8)],
        'code-line': 'class Embedding(Module):\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 8,
        'sel-line-start': 143,
        'selection_end': 158,
        'selection_start': 149,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/optim/sgd.py'): {'attrib-starts': [],
        'code-line': 'import torch\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/serialization.py'): {'attrib-starts': [('_open_file|0|',
        212),
        ('_open_file|0|.__init__|0|',
         213)],
        'code-line': '        super(_open_file, self).__init__(open(name, mode))\r\n',
        'first-line': 209,
        'folded-linenos': [],
        'sel-line': 214,
        'sel-line-start': 6838,
        'selection_end': 6838,
        'selection_start': 6838,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/lib/string.py'): {'attrib-starts': [],
        'code-line': 'ascii_letters = ascii_lowercase + ascii_uppercase\r\n',
        'first-line': 12,
        'folded-linenos': [],
        'sel-line': 26,
        'sel-line-start': 1053,
        'selection_end': 1066,
        'selection_start': 1053,
        'zoom': 0},
                       loc('../AppData/Local/Wing Personal 9/pi-cache/3.11/C/Users/Weka/AppData/Local/Programs/Python/Python311/Lib/site-packages/scipy/special/_ufuncs.pi'): {'attrib-starts': [],
        'code-line': 'def expit(arg0):\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 4371,
        'sel-line-start': 123041,
        'selection_end': 123050,
        'selection_start': 123045,
        'zoom': 0},
                       loc('../AppData/Roaming/Python/Python311/site-packages/nltk/data.py'): {'attrib-starts': [('find|0|',
        470)],
        'code-line': '    raise LookupError(resource_not_found)\r\n',
        'first-line': 569,
        'folded-linenos': [],
        'sel-line': 582,
        'sel-line-start': 21227,
        'selection_end': 21227,
        'selection_start': 21227,
        'zoom': 0},
                       loc('../AppData/Roaming/Python/Python311/site-packages/nltk/tokenize/__init__.py'): {'attrib-starts': [],
        'code-line': 'def word_tokenize(text, language="english", preserve_line=False):\r\n',
        'first-line': 100,
        'folded-linenos': [],
        'sel-line': 113,
        'sel-line-start': 4474,
        'selection_end': 4491,
        'selection_start': 4478,
        'zoom': 0},
                       loc('../bioinformatics/phylogeny.py'): {'attrib-starts': [],
        'code-line': '#!/usr/bin/env python\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 21,
        'selection_start': 0,
        'zoom': 0},
                       loc('../learn/template.py'): {'attrib-starts': [],
        'code-line': '\r\n',
        'first-line': 22,
        'folded-linenos': [],
        'sel-line': 31,
        'sel-line-start': 1148,
        'selection_end': 1148,
        'selection_start': 1148,
        'zoom': 0},
                       loc('64317-0.txt'): {'attrib-starts': [],
        'code-line': 'ï»¿The Project Gutenberg eBook of The Great Gatsby, by F. Scott Fitzgerald\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('README.md'): {'attrib-starts': [],
        'code-line': 'corpora.py|Library for reading text from corpora in various formats\r\n',
        'first-line': 6,
        'folded-linenos': [],
        'sel-line': 10,
        'sel-line-start': 260,
        'selection_end': 327,
        'selection_start': 327,
        'zoom': 0},
                       loc('bt.py'): {'attrib-starts': [],
                                      'code-line': '\r\n',
                                      'first-line': 9,
                                      'folded-linenos': [],
                                      'sel-line': 28,
                                      'sel-line-start': 1290,
                                      'selection_end': 1290,
                                      'selection_start': 1290,
                                      'zoom': 0},
                       loc('chapter1.txt'): {'attrib-starts': [],
        'code-line': 'In my younger and more vulnerable years my father gave me some advice\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('cluster.py'): {'attrib-starts': [],
        'code-line': '#!/usr/bin/env python\r\n',
        'first-line': 66,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('nano-corpus.txt'): {'attrib-starts': [],
        'code-line': 'paris is france capital.\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 6,
        'sel-line-start': 118,
        'selection_end': 118,
        'selection_start': 118,
        'zoom': 0},
                       loc('nlp.wpr'): {'attrib-starts': [],
        'code-line': "        'create_xkcd_colours')]},\r\n",
        'first-line': 686,
        'folded-linenos': [],
        'sel-line': 699,
        'sel-line-start': 40803,
        'selection_end': 40823,
        'selection_start': 40819,
        'zoom': 0},
                       loc('plot.py'): {'attrib-starts': [],
        'code-line': '#    along with this program.  If not, see <http://www.gnu.org/licenses/>\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 15,
        'sel-line-start': 689,
        'selection_end': 762,
        'selection_start': 762,
        'zoom': 0},
                       loc('rnn.py'): {'attrib-starts': [],
                                       'code-line': " '''\r\n",
                                       'first-line': 252,
                                       'folded-linenos': [],
                                       'sel-line': 24,
                                       'sel-line-start': 1063,
                                       'selection_end': 1067,
                                       'selection_start': 1067,
                                       'zoom': 0},
                       loc('rnn2.py'): {'attrib-starts': [],
        'code-line': '\r\n',
        'first-line': 152,
        'folded-linenos': [],
        'sel-line': 20,
        'sel-line-start': 929,
        'selection_end': 929,
        'selection_start': 929,
        'zoom': 0},
                       loc('seq2seq.py'): {'attrib-starts': [],
        'code-line': '\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 22,
        'sel-line-start': 981,
        'selection_end': 981,
        'selection_start': 981,
        'zoom': 0},
                       loc('skipgram.py'): {'attrib-starts': [('Word2Vec|0|',
        225)],
        'code-line': '    def get_product(self,i_w,i_c):\r\n',
        'first-line': 537,
        'folded-linenos': [],
        'sel-line': 250,
        'sel-line-start': 8437,
        'selection_end': 8448,
        'selection_start': 8437,
        'zoom': 0},
                       loc('spacy-vectors.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('template-test.py'): {'attrib-starts': [],
        'code-line': 'from unittest import main, TestCase\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 19,
        'sel-line-start': 764,
        'selection_end': 764,
        'selection_start': 764,
        'zoom': 0},
                       loc('template.py'): {'attrib-starts': [],
        'code-line': '    parser = ArgumentParser(description=__doc__)\r\n',
        'first-line': 13,
        'folded-linenos': [],
        'sel-line': 25,
        'sel-line-start': 889,
        'selection_end': 929,
        'selection_start': 929,
        'zoom': 0},
                       loc('tf-idf-exec.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('tf-idf.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('tfidf-harness.py'): {'attrib-starts': [],
        'code-line': '    words,tf_idf = TfIdf(docnames=docnames)\r\n',
        'first-line': 9,
        'folded-linenos': [],
        'sel-line': 31,
        'sel-line-start': 1266,
        'selection_end': 1290,
        'selection_start': 1285,
        'zoom': 0},
                       loc('tfidf.py'): {'attrib-starts': [],
        'code-line': 'from tokenizer import read_text, extract_sentences, extract_tokens\r\n',
        'first-line': 3,
        'folded-linenos': [],
        'sel-line': 24,
        'sel-line-start': 926,
        'selection_end': 992,
        'selection_start': 926,
        'zoom': 0},
                       loc('tokenizer.py'): {'attrib-starts': [('read_text|0|',
        22)],
        'code-line': "        with open(file_name,encoding='utf-8') as text_file:\r\n",
        'first-line': 15,
        'folded-linenos': [],
        'sel-line': 34,
        'sel-line-start': 1210,
        'selection_end': 1269,
        'selection_start': 1218,
        'zoom': 0}}
proj.build-cmd = {None: ('default',
                         None)}
proj.env-vars = {None: ('default',
                        [''])}
proj.pyexec = {None: ('default',
                      '/Users/Weka/AppData/Local/Programs/Python/Python38/python')}
search.replace-history = ['establish_tau',
                          'command',
                          'ext',
                          'create_file_name',
                          'eta',
                          'n_groups',
                          'np.array',
                          'torch.zeros',
                          'torch.randn',
                          'torch.norm',
                          'torch.matmul',
                          'torch.from_numpy',
                          'torch.flip',
                          'torch.flatten',
                          'torch.dot',
                          'calculate_loss',
                          'lr',
                          "'",
                          'get_samples',
                          'step']
search.search-history = ['extract_tokens',
                         'extract_sentences',
                         'read_te',
                         'create_v',
                         'read_',
                         'L',
                         'writer',
                         'get_product',
                         'create_productsWC',
                         'zero',
                         'zeror',
                         'get_tau',
                         'Index2Word',
                         'eta_tau',
                         'Recommend that tau',
                         'action',
                         'create_productsW',
                         'log',
                         'skipp',
                         'checkpoint']
search.search-scope-history = [loc('.')]
